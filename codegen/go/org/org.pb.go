// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: org/org.proto

package org

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	opts "github.com/nnqq/scr-proto/codegen/go/opts"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OrgKind int32

const (
	OrgKind_ORG_KIND_NONE OrgKind = 0
	// Юридическое лицо
	OrgKind_LEGAL OrgKind = 1
	// Индивидуальный предприниматель
	OrgKind_INDIVIDUAL OrgKind = 2
)

// Enum value maps for OrgKind.
var (
	OrgKind_name = map[int32]string{
		0: "ORG_KIND_NONE",
		1: "LEGAL",
		2: "INDIVIDUAL",
	}
	OrgKind_value = map[string]int32{
		"ORG_KIND_NONE": 0,
		"LEGAL":         1,
		"INDIVIDUAL":    2,
	}
)

func (x OrgKind) Enum() *OrgKind {
	p := new(OrgKind)
	*p = x
	return p
}

func (x OrgKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrgKind) Descriptor() protoreflect.EnumDescriptor {
	return file_org_org_proto_enumTypes[0].Descriptor()
}

func (OrgKind) Type() protoreflect.EnumType {
	return &file_org_org_proto_enumTypes[0]
}

func (x OrgKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrgKind.Descriptor instead.
func (OrgKind) EnumDescriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{0}
}

// Версия справочника ОКВЭД
type OkvedKind int32

const (
	OkvedKind_OKVED_KIND_NONE OkvedKind = 0
	OkvedKind_Y2001           OkvedKind = 1
	OkvedKind_Y2004           OkvedKind = 2
)

// Enum value maps for OkvedKind.
var (
	OkvedKind_name = map[int32]string{
		0: "OKVED_KIND_NONE",
		1: "Y2001",
		2: "Y2004",
	}
	OkvedKind_value = map[string]int32{
		"OKVED_KIND_NONE": 0,
		"Y2001":           1,
		"Y2004":           2,
	}
)

func (x OkvedKind) Enum() *OkvedKind {
	p := new(OkvedKind)
	*p = x
	return p
}

func (x OkvedKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OkvedKind) Descriptor() protoreflect.EnumDescriptor {
	return file_org_org_proto_enumTypes[1].Descriptor()
}

func (OkvedKind) Type() protoreflect.EnumType {
	return &file_org_org_proto_enumTypes[1]
}

func (x OkvedKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OkvedKind.Descriptor instead.
func (OkvedKind) EnumDescriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{1}
}

// Версия справочника ОКОПФ
type OpfKind int32

const (
	OpfKind_OPF_KIND_NONE OpfKind = 0
	OpfKind_Y1999         OpfKind = 1
	OpfKind_Y2012         OpfKind = 2
	OpfKind_Y2014         OpfKind = 3
)

// Enum value maps for OpfKind.
var (
	OpfKind_name = map[int32]string{
		0: "OPF_KIND_NONE",
		1: "Y1999",
		2: "Y2012",
		3: "Y2014",
	}
	OpfKind_value = map[string]int32{
		"OPF_KIND_NONE": 0,
		"Y1999":         1,
		"Y2012":         2,
		"Y2014":         3,
	}
)

func (x OpfKind) Enum() *OpfKind {
	p := new(OpfKind)
	*p = x
	return p
}

func (x OpfKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpfKind) Descriptor() protoreflect.EnumDescriptor {
	return file_org_org_proto_enumTypes[2].Descriptor()
}

func (OpfKind) Type() protoreflect.EnumType {
	return &file_org_org_proto_enumTypes[2]
}

func (x OpfKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpfKind.Descriptor instead.
func (OpfKind) EnumDescriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{2}
}

// Статус организации
type StatusKind int32

const (
	StatusKind_STATUS_KIND_NONE StatusKind = 0
	// Действующая
	StatusKind_ACTIVE StatusKind = 1
	// Ликвидируется
	StatusKind_LIQUIDATING StatusKind = 2
	// Ликвидирована
	StatusKind_LIQUIDATED StatusKind = 3
	// Банкротство
	StatusKind_BANKRUPT StatusKind = 4
	// В процессе присоединения к другому юрлицу, с последующей ликвидацией
	StatusKind_REORGANIZING StatusKind = 5
)

// Enum value maps for StatusKind.
var (
	StatusKind_name = map[int32]string{
		0: "STATUS_KIND_NONE",
		1: "ACTIVE",
		2: "LIQUIDATING",
		3: "LIQUIDATED",
		4: "BANKRUPT",
		5: "REORGANIZING",
	}
	StatusKind_value = map[string]int32{
		"STATUS_KIND_NONE": 0,
		"ACTIVE":           1,
		"LIQUIDATING":      2,
		"LIQUIDATED":       3,
		"BANKRUPT":         4,
		"REORGANIZING":     5,
	}
)

func (x StatusKind) Enum() *StatusKind {
	p := new(StatusKind)
	*p = x
	return p
}

func (x StatusKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusKind) Descriptor() protoreflect.EnumDescriptor {
	return file_org_org_proto_enumTypes[3].Descriptor()
}

func (StatusKind) Type() protoreflect.EnumType {
	return &file_org_org_proto_enumTypes[3]
}

func (x StatusKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusKind.Descriptor instead.
func (StatusKind) EnumDescriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{3}
}

type GetRelatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts    *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	AreaId  string          `protobuf:"bytes,2,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	OkvedId string          `protobuf:"bytes,3,opt,name=okved_id,json=okvedId,proto3" json:"okved_id,omitempty"`
}

func (x *GetRelatedRequest) Reset() {
	*x = GetRelatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelatedRequest) ProtoMessage() {}

func (x *GetRelatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelatedRequest.ProtoReflect.Descriptor instead.
func (*GetRelatedRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{0}
}

func (x *GetRelatedRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GetRelatedRequest) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *GetRelatedRequest) GetOkvedId() string {
	if x != nil {
		return x.OkvedId
	}
	return ""
}

type GetByAreaIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts   *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	AreaId string          `protobuf:"bytes,2,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
}

func (x *GetByAreaIdRequest) Reset() {
	*x = GetByAreaIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByAreaIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByAreaIdRequest) ProtoMessage() {}

func (x *GetByAreaIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByAreaIdRequest.ProtoReflect.Descriptor instead.
func (*GetByAreaIdRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{1}
}

func (x *GetByAreaIdRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GetByAreaIdRequest) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

type GetByManagerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts      *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	ManagerId string          `protobuf:"bytes,2,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
}

func (x *GetByManagerIdRequest) Reset() {
	*x = GetByManagerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByManagerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByManagerIdRequest) ProtoMessage() {}

func (x *GetByManagerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByManagerIdRequest.ProtoReflect.Descriptor instead.
func (*GetByManagerIdRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{2}
}

func (x *GetByManagerIdRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GetByManagerIdRequest) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

type GetByMetroIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts    *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	MetroId string          `protobuf:"bytes,2,opt,name=metro_id,json=metroId,proto3" json:"metro_id,omitempty"`
}

func (x *GetByMetroIdRequest) Reset() {
	*x = GetByMetroIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByMetroIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByMetroIdRequest) ProtoMessage() {}

func (x *GetByMetroIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByMetroIdRequest.ProtoReflect.Descriptor instead.
func (*GetByMetroIdRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{3}
}

func (x *GetByMetroIdRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GetByMetroIdRequest) GetMetroId() string {
	if x != nil {
		return x.MetroId
	}
	return ""
}

type GetByOkvedIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts    *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	OkvedId string          `protobuf:"bytes,2,opt,name=okved_id,json=okvedId,proto3" json:"okved_id,omitempty"`
}

func (x *GetByOkvedIdRequest) Reset() {
	*x = GetByOkvedIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByOkvedIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByOkvedIdRequest) ProtoMessage() {}

func (x *GetByOkvedIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByOkvedIdRequest.ProtoReflect.Descriptor instead.
func (*GetByOkvedIdRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{4}
}

func (x *GetByOkvedIdRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GetByOkvedIdRequest) GetOkvedId() string {
	if x != nil {
		return x.OkvedId
	}
	return ""
}

type GetBySlugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetBySlugRequest) Reset() {
	*x = GetBySlugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBySlugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBySlugRequest) ProtoMessage() {}

func (x *GetBySlugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBySlugRequest.ProtoReflect.Descriptor instead.
func (*GetBySlugRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{5}
}

func (x *GetBySlugRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type Main struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug             string        `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name             string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Inn              float64       `protobuf:"fixed64,4,opt,name=inn,proto3" json:"inn,omitempty"`
	Kpp              float64       `protobuf:"fixed64,5,opt,name=kpp,proto3" json:"kpp,omitempty"`
	Ogrn             float64       `protobuf:"fixed64,6,opt,name=ogrn,proto3" json:"ogrn,omitempty"`
	Kind             OrgKind       `protobuf:"varint,7,opt,name=kind,proto3,enum=org.OrgKind" json:"kind,omitempty"`
	Manager          *ManagerItem  `protobuf:"bytes,8,opt,name=manager,proto3" json:"manager,omitempty"`
	Area             *AreaItem     `protobuf:"bytes,9,opt,name=area,proto3" json:"area,omitempty"`
	Location         *LocationItem `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	Okved            *OkvedItem    `protobuf:"bytes,11,opt,name=okved,proto3" json:"okved,omitempty"`
	StatusKind       StatusKind    `protobuf:"varint,12,opt,name=status_kind,json=statusKind,proto3,enum=org.StatusKind" json:"status_kind,omitempty"`
	OkvedDop         []*OkvedItem  `protobuf:"bytes,13,rep,name=okved_dop,json=okvedDop,proto3" json:"okved_dop,omitempty"`
	EmployeeCount    uint32        `protobuf:"varint,14,opt,name=employee_count,json=employeeCount,proto3" json:"employee_count,omitempty"`
	Metros           []*MetroItem  `protobuf:"bytes,15,rep,name=metros,proto3" json:"metros,omitempty"`
	NameFullWithOpf  string        `protobuf:"bytes,16,opt,name=name_full_with_opf,json=nameFullWithOpf,proto3" json:"name_full_with_opf,omitempty"`
	NameShortWithOpf string        `protobuf:"bytes,17,opt,name=name_short_with_opf,json=nameShortWithOpf,proto3" json:"name_short_with_opf,omitempty"`
	OpfCode          float64       `protobuf:"fixed64,18,opt,name=opf_code,json=opfCode,proto3" json:"opf_code,omitempty"`
	OpfFull          string        `protobuf:"bytes,19,opt,name=opf_full,json=opfFull,proto3" json:"opf_full,omitempty"`
	OpfShort         string        `protobuf:"bytes,20,opt,name=opf_short,json=opfShort,proto3" json:"opf_short,omitempty"`
	OpfKind          OpfKind       `protobuf:"varint,21,opt,name=opf_kind,json=opfKind,proto3,enum=org.OpfKind" json:"opf_kind,omitempty"`
	OgrnDate         string        `protobuf:"bytes,22,opt,name=ogrn_date,json=ogrnDate,proto3" json:"ogrn_date,omitempty"`
	Okato            float64       `protobuf:"fixed64,23,opt,name=okato,proto3" json:"okato,omitempty"`
	Oktmo            float64       `protobuf:"fixed64,24,opt,name=oktmo,proto3" json:"oktmo,omitempty"`
	Okpo             float64       `protobuf:"fixed64,25,opt,name=okpo,proto3" json:"okpo,omitempty"`
	Okogu            float64       `protobuf:"fixed64,26,opt,name=okogu,proto3" json:"okogu,omitempty"`
	Okfs             float64       `protobuf:"fixed64,27,opt,name=okfs,proto3" json:"okfs,omitempty"`
	RegistrationDate string        `protobuf:"bytes,28,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	LiquidationDate  string        `protobuf:"bytes,29,opt,name=liquidation_date,json=liquidationDate,proto3" json:"liquidation_date,omitempty"`
	UpdatedAt        string        `protobuf:"bytes,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Main) Reset() {
	*x = Main{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Main) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Main) ProtoMessage() {}

func (x *Main) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Main.ProtoReflect.Descriptor instead.
func (*Main) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{6}
}

func (x *Main) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Main) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Main) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Main) GetInn() float64 {
	if x != nil {
		return x.Inn
	}
	return 0
}

func (x *Main) GetKpp() float64 {
	if x != nil {
		return x.Kpp
	}
	return 0
}

func (x *Main) GetOgrn() float64 {
	if x != nil {
		return x.Ogrn
	}
	return 0
}

func (x *Main) GetKind() OrgKind {
	if x != nil {
		return x.Kind
	}
	return OrgKind_ORG_KIND_NONE
}

func (x *Main) GetManager() *ManagerItem {
	if x != nil {
		return x.Manager
	}
	return nil
}

func (x *Main) GetArea() *AreaItem {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *Main) GetLocation() *LocationItem {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Main) GetOkved() *OkvedItem {
	if x != nil {
		return x.Okved
	}
	return nil
}

func (x *Main) GetStatusKind() StatusKind {
	if x != nil {
		return x.StatusKind
	}
	return StatusKind_STATUS_KIND_NONE
}

func (x *Main) GetOkvedDop() []*OkvedItem {
	if x != nil {
		return x.OkvedDop
	}
	return nil
}

func (x *Main) GetEmployeeCount() uint32 {
	if x != nil {
		return x.EmployeeCount
	}
	return 0
}

func (x *Main) GetMetros() []*MetroItem {
	if x != nil {
		return x.Metros
	}
	return nil
}

func (x *Main) GetNameFullWithOpf() string {
	if x != nil {
		return x.NameFullWithOpf
	}
	return ""
}

func (x *Main) GetNameShortWithOpf() string {
	if x != nil {
		return x.NameShortWithOpf
	}
	return ""
}

func (x *Main) GetOpfCode() float64 {
	if x != nil {
		return x.OpfCode
	}
	return 0
}

func (x *Main) GetOpfFull() string {
	if x != nil {
		return x.OpfFull
	}
	return ""
}

func (x *Main) GetOpfShort() string {
	if x != nil {
		return x.OpfShort
	}
	return ""
}

func (x *Main) GetOpfKind() OpfKind {
	if x != nil {
		return x.OpfKind
	}
	return OpfKind_OPF_KIND_NONE
}

func (x *Main) GetOgrnDate() string {
	if x != nil {
		return x.OgrnDate
	}
	return ""
}

func (x *Main) GetOkato() float64 {
	if x != nil {
		return x.Okato
	}
	return 0
}

func (x *Main) GetOktmo() float64 {
	if x != nil {
		return x.Oktmo
	}
	return 0
}

func (x *Main) GetOkpo() float64 {
	if x != nil {
		return x.Okpo
	}
	return 0
}

func (x *Main) GetOkogu() float64 {
	if x != nil {
		return x.Okogu
	}
	return 0
}

func (x *Main) GetOkfs() float64 {
	if x != nil {
		return x.Okfs
	}
	return 0
}

func (x *Main) GetRegistrationDate() string {
	if x != nil {
		return x.RegistrationDate
	}
	return ""
}

func (x *Main) GetLiquidationDate() string {
	if x != nil {
		return x.LiquidationDate
	}
	return ""
}

func (x *Main) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Area       *AreaItem     `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
	Location   *LocationItem `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	StatusKind StatusKind    `protobuf:"varint,4,opt,name=status_kind,json=statusKind,proto3,enum=org.StatusKind" json:"status_kind,omitempty"`
}

func (x *Branch) Reset() {
	*x = Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{7}
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetArea() *AreaItem {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *Branch) GetLocation() *LocationItem {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Branch) GetStatusKind() StatusKind {
	if x != nil {
		return x.StatusKind
	}
	return StatusKind_STATUS_KIND_NONE
}

type GetBySlugResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main     *Main     `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Branches []*Branch `protobuf:"bytes,2,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *GetBySlugResponse) Reset() {
	*x = GetBySlugResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBySlugResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBySlugResponse) ProtoMessage() {}

func (x *GetBySlugResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBySlugResponse.ProtoReflect.Descriptor instead.
func (*GetBySlugResponse) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{8}
}

func (x *GetBySlugResponse) GetMain() *Main {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *GetBySlugResponse) GetBranches() []*Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{9}
}

func (x *GetRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

type MetroItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug     string  `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name     string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Distance float32 `protobuf:"fixed32,4,opt,name=distance,proto3" json:"distance,omitempty"`
}

func (x *MetroItem) Reset() {
	*x = MetroItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetroItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetroItem) ProtoMessage() {}

func (x *MetroItem) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetroItem.ProtoReflect.Descriptor instead.
func (*MetroItem) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{10}
}

func (x *MetroItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetroItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MetroItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetroItem) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type ManagerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ManagerItem) Reset() {
	*x = ManagerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerItem) ProtoMessage() {}

func (x *ManagerItem) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerItem.ProtoReflect.Descriptor instead.
func (*ManagerItem) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{11}
}

func (x *ManagerItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagerItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ManagerItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AreaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AreaItem) Reset() {
	*x = AreaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaItem) ProtoMessage() {}

func (x *AreaItem) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaItem.ProtoReflect.Descriptor instead.
func (*AreaItem) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{12}
}

func (x *AreaItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AreaItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *AreaItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LocationItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LocationItem) Reset() {
	*x = LocationItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationItem) ProtoMessage() {}

func (x *LocationItem) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationItem.ProtoReflect.Descriptor instead.
func (*LocationItem) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{13}
}

func (x *LocationItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LocationItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *LocationItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OkvedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string    `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Kind OkvedKind `protobuf:"varint,4,opt,name=kind,proto3,enum=org.OkvedKind" json:"kind,omitempty"`
}

func (x *OkvedItem) Reset() {
	*x = OkvedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OkvedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OkvedItem) ProtoMessage() {}

func (x *OkvedItem) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OkvedItem.ProtoReflect.Descriptor instead.
func (*OkvedItem) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{14}
}

func (x *OkvedItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OkvedItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *OkvedItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OkvedItem) GetKind() OkvedKind {
	if x != nil {
		return x.Kind
	}
	return OkvedKind_OKVED_KIND_NONE
}

type OrgShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug       string        `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name       string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Inn        float64       `protobuf:"fixed64,4,opt,name=inn,proto3" json:"inn,omitempty"`
	Kpp        float64       `protobuf:"fixed64,5,opt,name=kpp,proto3" json:"kpp,omitempty"`
	Ogrn       float64       `protobuf:"fixed64,6,opt,name=ogrn,proto3" json:"ogrn,omitempty"`
	Kind       OrgKind       `protobuf:"varint,7,opt,name=kind,proto3,enum=org.OrgKind" json:"kind,omitempty"`
	Manager    *ManagerItem  `protobuf:"bytes,8,opt,name=manager,proto3" json:"manager,omitempty"`
	Area       *AreaItem     `protobuf:"bytes,9,opt,name=area,proto3" json:"area,omitempty"`
	Location   *LocationItem `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	Okved      *OkvedItem    `protobuf:"bytes,11,opt,name=okved,proto3" json:"okved,omitempty"`
	StatusKind StatusKind    `protobuf:"varint,12,opt,name=status_kind,json=statusKind,proto3,enum=org.StatusKind" json:"status_kind,omitempty"`
}

func (x *OrgShort) Reset() {
	*x = OrgShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgShort) ProtoMessage() {}

func (x *OrgShort) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgShort.ProtoReflect.Descriptor instead.
func (*OrgShort) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{15}
}

func (x *OrgShort) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgShort) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *OrgShort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgShort) GetInn() float64 {
	if x != nil {
		return x.Inn
	}
	return 0
}

func (x *OrgShort) GetKpp() float64 {
	if x != nil {
		return x.Kpp
	}
	return 0
}

func (x *OrgShort) GetOgrn() float64 {
	if x != nil {
		return x.Ogrn
	}
	return 0
}

func (x *OrgShort) GetKind() OrgKind {
	if x != nil {
		return x.Kind
	}
	return OrgKind_ORG_KIND_NONE
}

func (x *OrgShort) GetManager() *ManagerItem {
	if x != nil {
		return x.Manager
	}
	return nil
}

func (x *OrgShort) GetArea() *AreaItem {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *OrgShort) GetLocation() *LocationItem {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *OrgShort) GetOkved() *OkvedItem {
	if x != nil {
		return x.Okved
	}
	return nil
}

func (x *OrgShort) GetStatusKind() StatusKind {
	if x != nil {
		return x.StatusKind
	}
	return StatusKind_STATUS_KIND_NONE
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orgs []*OrgShort `protobuf:"bytes,1,rep,name=orgs,proto3" json:"orgs,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_org_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_org_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_org_org_proto_rawDescGZIP(), []int{16}
}

func (x *GetResponse) GetOrgs() []*OrgShort {
	if x != nil {
		return x.Orgs
	}
	return nil
}

var File_org_org_proto protoreflect.FileDescriptor

var file_org_org_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2f, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6f, 0x72, 0x67, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x6f, 0x70, 0x74, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x53, 0x6b,
	0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x49,
	0x64, 0x22, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x53, 0x6b, 0x69,
	0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f,
	0x70, 0x74, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x6f,
	0x70, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x55, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x6f,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6f, 0x70, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x53,
	0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x4f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x64,
	0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0xc0, 0x07, 0x0a, 0x04, 0x4d, 0x61, 0x69,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x69, 0x6e, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6b, 0x70, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6f, 0x67, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x67, 0x72,
	0x6e, 0x12, 0x20, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x72, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x6f, 0x6b, 0x76,
	0x65, 0x64, 0x5f, 0x64, 0x6f, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x4f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6f, 0x6b,
	0x76, 0x65, 0x64, 0x44, 0x6f, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x72, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6f, 0x70, 0x66, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x70, 0x66, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6f, 0x70, 0x66, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70,
	0x66, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x6f, 0x70, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x70, 0x66, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x70, 0x66, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x66, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x66, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x6f, 0x70, 0x66, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x70, 0x66,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x07, 0x6f, 0x70, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x67, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x67, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x6b,
	0x61, 0x74, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6f, 0x6b, 0x61, 0x74, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x6b, 0x74, 0x6d, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x6f, 0x6b, 0x74, 0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6b, 0x70, 0x6f, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x6b, 0x70, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x6b,
	0x6f, 0x67, 0x75, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6f, 0x6b, 0x6f, 0x67, 0x75,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6b, 0x66, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x6f, 0x6b, 0x66, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x06,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x2d, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x5b,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x27, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6f, 0x70, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x53,
	0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22, 0x5f,
	0x0a, 0x09, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x45, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x67, 0x0a, 0x09, 0x4f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x6b, 0x76, 0x65,
	0x64, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xf2, 0x02, 0x0a, 0x08,
	0x4f, 0x72, 0x67, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x69,
	0x6e, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6b, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x67, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6f, 0x67, 0x72, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x72, 0x67,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x6b, 0x76, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x6b,
	0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x6f, 0x6b, 0x76, 0x65, 0x64, 0x12, 0x30,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x69, 0x6e, 0x64,
	0x22, 0x30, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x6f, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x72, 0x67, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x6f, 0x72,
	0x67, 0x73, 0x2a, 0x37, 0x0a, 0x07, 0x4f, 0x72, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x11, 0x0a,
	0x0d, 0x4f, 0x52, 0x47, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x09, 0x4f,
	0x6b, 0x76, 0x65, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x4b, 0x56, 0x45,
	0x44, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x59, 0x32, 0x30, 0x30, 0x31, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x32, 0x30, 0x30,
	0x34, 0x10, 0x02, 0x2a, 0x3d, 0x0a, 0x07, 0x4f, 0x70, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x11,
	0x0a, 0x0d, 0x4f, 0x50, 0x46, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x31, 0x39, 0x39, 0x39, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x59, 0x32, 0x30, 0x31, 0x32, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x32, 0x30, 0x31, 0x34,
	0x10, 0x03, 0x2a, 0x6f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x4e, 0x4b, 0x52, 0x55, 0x50, 0x54, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x49, 0x4e,
	0x47, 0x10, 0x05, 0x32, 0xda, 0x04, 0x0a, 0x03, 0x4f, 0x72, 0x67, 0x12, 0x3d, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x0f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x64, 0x12, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x58, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x49,
	0x64, 0x12, 0x18, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x74,
	0x72, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x67,
	0x65, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x4f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x6b, 0x76, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x6b,
	0x76, 0x65, 0x64, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x15, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x6e, 0x71, 0x71, 0x2f, 0x73, 0x63, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_org_org_proto_rawDescOnce sync.Once
	file_org_org_proto_rawDescData = file_org_org_proto_rawDesc
)

func file_org_org_proto_rawDescGZIP() []byte {
	file_org_org_proto_rawDescOnce.Do(func() {
		file_org_org_proto_rawDescData = protoimpl.X.CompressGZIP(file_org_org_proto_rawDescData)
	})
	return file_org_org_proto_rawDescData
}

var file_org_org_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_org_org_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_org_org_proto_goTypes = []interface{}{
	(OrgKind)(0),                  // 0: org.OrgKind
	(OkvedKind)(0),                // 1: org.OkvedKind
	(OpfKind)(0),                  // 2: org.OpfKind
	(StatusKind)(0),               // 3: org.StatusKind
	(*GetRelatedRequest)(nil),     // 4: org.GetRelatedRequest
	(*GetByAreaIdRequest)(nil),    // 5: org.GetByAreaIdRequest
	(*GetByManagerIdRequest)(nil), // 6: org.GetByManagerIdRequest
	(*GetByMetroIdRequest)(nil),   // 7: org.GetByMetroIdRequest
	(*GetByOkvedIdRequest)(nil),   // 8: org.GetByOkvedIdRequest
	(*GetBySlugRequest)(nil),      // 9: org.GetBySlugRequest
	(*Main)(nil),                  // 10: org.Main
	(*Branch)(nil),                // 11: org.Branch
	(*GetBySlugResponse)(nil),     // 12: org.GetBySlugResponse
	(*GetRequest)(nil),            // 13: org.GetRequest
	(*MetroItem)(nil),             // 14: org.MetroItem
	(*ManagerItem)(nil),           // 15: org.ManagerItem
	(*AreaItem)(nil),              // 16: org.AreaItem
	(*LocationItem)(nil),          // 17: org.LocationItem
	(*OkvedItem)(nil),             // 18: org.OkvedItem
	(*OrgShort)(nil),              // 19: org.OrgShort
	(*GetResponse)(nil),           // 20: org.GetResponse
	(*opts.SkipLimit)(nil),        // 21: opts.SkipLimit
}
var file_org_org_proto_depIdxs = []int32{
	21, // 0: org.GetRelatedRequest.opts:type_name -> opts.SkipLimit
	21, // 1: org.GetByAreaIdRequest.opts:type_name -> opts.SkipLimit
	21, // 2: org.GetByManagerIdRequest.opts:type_name -> opts.SkipLimit
	21, // 3: org.GetByMetroIdRequest.opts:type_name -> opts.SkipLimit
	21, // 4: org.GetByOkvedIdRequest.opts:type_name -> opts.SkipLimit
	0,  // 5: org.Main.kind:type_name -> org.OrgKind
	15, // 6: org.Main.manager:type_name -> org.ManagerItem
	16, // 7: org.Main.area:type_name -> org.AreaItem
	17, // 8: org.Main.location:type_name -> org.LocationItem
	18, // 9: org.Main.okved:type_name -> org.OkvedItem
	3,  // 10: org.Main.status_kind:type_name -> org.StatusKind
	18, // 11: org.Main.okved_dop:type_name -> org.OkvedItem
	14, // 12: org.Main.metros:type_name -> org.MetroItem
	2,  // 13: org.Main.opf_kind:type_name -> org.OpfKind
	16, // 14: org.Branch.area:type_name -> org.AreaItem
	17, // 15: org.Branch.location:type_name -> org.LocationItem
	3,  // 16: org.Branch.status_kind:type_name -> org.StatusKind
	10, // 17: org.GetBySlugResponse.main:type_name -> org.Main
	11, // 18: org.GetBySlugResponse.branches:type_name -> org.Branch
	21, // 19: org.GetRequest.opts:type_name -> opts.SkipLimit
	1,  // 20: org.OkvedItem.kind:type_name -> org.OkvedKind
	0,  // 21: org.OrgShort.kind:type_name -> org.OrgKind
	15, // 22: org.OrgShort.manager:type_name -> org.ManagerItem
	16, // 23: org.OrgShort.area:type_name -> org.AreaItem
	17, // 24: org.OrgShort.location:type_name -> org.LocationItem
	18, // 25: org.OrgShort.okved:type_name -> org.OkvedItem
	3,  // 26: org.OrgShort.status_kind:type_name -> org.StatusKind
	19, // 27: org.GetResponse.orgs:type_name -> org.OrgShort
	13, // 28: org.Org.Get:input_type -> org.GetRequest
	5,  // 29: org.Org.GetByAreaId:input_type -> org.GetByAreaIdRequest
	6,  // 30: org.Org.GetByManagerId:input_type -> org.GetByManagerIdRequest
	7,  // 31: org.Org.GetByMetroId:input_type -> org.GetByMetroIdRequest
	8,  // 32: org.Org.GetByOkvedId:input_type -> org.GetByOkvedIdRequest
	4,  // 33: org.Org.GetRelated:input_type -> org.GetRelatedRequest
	9,  // 34: org.Org.GetBySlug:input_type -> org.GetBySlugRequest
	20, // 35: org.Org.Get:output_type -> org.GetResponse
	20, // 36: org.Org.GetByAreaId:output_type -> org.GetResponse
	20, // 37: org.Org.GetByManagerId:output_type -> org.GetResponse
	20, // 38: org.Org.GetByMetroId:output_type -> org.GetResponse
	20, // 39: org.Org.GetByOkvedId:output_type -> org.GetResponse
	20, // 40: org.Org.GetRelated:output_type -> org.GetResponse
	12, // 41: org.Org.GetBySlug:output_type -> org.GetBySlugResponse
	35, // [35:42] is the sub-list for method output_type
	28, // [28:35] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_org_org_proto_init() }
func file_org_org_proto_init() {
	if File_org_org_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_org_org_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByAreaIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByManagerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByMetroIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByOkvedIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBySlugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Main); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBySlugResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetroItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OkvedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_org_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_org_org_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_org_org_proto_goTypes,
		DependencyIndexes: file_org_org_proto_depIdxs,
		EnumInfos:         file_org_org_proto_enumTypes,
		MessageInfos:      file_org_org_proto_msgTypes,
	}.Build()
	File_org_org_proto = out.File
	file_org_org_proto_rawDesc = nil
	file_org_org_proto_goTypes = nil
	file_org_org_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrgClient is the client API for Org service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrgClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetByAreaId(ctx context.Context, in *GetByAreaIdRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetByManagerId(ctx context.Context, in *GetByManagerIdRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetByMetroId(ctx context.Context, in *GetByMetroIdRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetByOkvedId(ctx context.Context, in *GetByOkvedIdRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetRelated(ctx context.Context, in *GetRelatedRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetBySlug(ctx context.Context, in *GetBySlugRequest, opts ...grpc.CallOption) (*GetBySlugResponse, error)
}

type orgClient struct {
	cc grpc.ClientConnInterface
}

func NewOrgClient(cc grpc.ClientConnInterface) OrgClient {
	return &orgClient{cc}
}

func (c *orgClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/org.Org/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgClient) GetByAreaId(ctx context.Context, in *GetByAreaIdRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/org.Org/GetByAreaId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgClient) GetByManagerId(ctx context.Context, in *GetByManagerIdRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/org.Org/GetByManagerId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgClient) GetByMetroId(ctx context.Context, in *GetByMetroIdRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/org.Org/GetByMetroId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgClient) GetByOkvedId(ctx context.Context, in *GetByOkvedIdRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/org.Org/GetByOkvedId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgClient) GetRelated(ctx context.Context, in *GetRelatedRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/org.Org/GetRelated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgClient) GetBySlug(ctx context.Context, in *GetBySlugRequest, opts ...grpc.CallOption) (*GetBySlugResponse, error) {
	out := new(GetBySlugResponse)
	err := c.cc.Invoke(ctx, "/org.Org/GetBySlug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrgServer is the server API for Org service.
type OrgServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	GetByAreaId(context.Context, *GetByAreaIdRequest) (*GetResponse, error)
	GetByManagerId(context.Context, *GetByManagerIdRequest) (*GetResponse, error)
	GetByMetroId(context.Context, *GetByMetroIdRequest) (*GetResponse, error)
	GetByOkvedId(context.Context, *GetByOkvedIdRequest) (*GetResponse, error)
	GetRelated(context.Context, *GetRelatedRequest) (*GetResponse, error)
	GetBySlug(context.Context, *GetBySlugRequest) (*GetBySlugResponse, error)
}

// UnimplementedOrgServer can be embedded to have forward compatible implementations.
type UnimplementedOrgServer struct {
}

func (*UnimplementedOrgServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedOrgServer) GetByAreaId(context.Context, *GetByAreaIdRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByAreaId not implemented")
}
func (*UnimplementedOrgServer) GetByManagerId(context.Context, *GetByManagerIdRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByManagerId not implemented")
}
func (*UnimplementedOrgServer) GetByMetroId(context.Context, *GetByMetroIdRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByMetroId not implemented")
}
func (*UnimplementedOrgServer) GetByOkvedId(context.Context, *GetByOkvedIdRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByOkvedId not implemented")
}
func (*UnimplementedOrgServer) GetRelated(context.Context, *GetRelatedRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelated not implemented")
}
func (*UnimplementedOrgServer) GetBySlug(context.Context, *GetBySlugRequest) (*GetBySlugResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBySlug not implemented")
}

func RegisterOrgServer(s *grpc.Server, srv OrgServer) {
	s.RegisterService(&_Org_serviceDesc, srv)
}

func _Org_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Org_GetByAreaId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByAreaIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).GetByAreaId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/GetByAreaId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).GetByAreaId(ctx, req.(*GetByAreaIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Org_GetByManagerId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByManagerIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).GetByManagerId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/GetByManagerId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).GetByManagerId(ctx, req.(*GetByManagerIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Org_GetByMetroId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByMetroIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).GetByMetroId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/GetByMetroId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).GetByMetroId(ctx, req.(*GetByMetroIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Org_GetByOkvedId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByOkvedIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).GetByOkvedId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/GetByOkvedId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).GetByOkvedId(ctx, req.(*GetByOkvedIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Org_GetRelated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).GetRelated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/GetRelated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).GetRelated(ctx, req.(*GetRelatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Org_GetBySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBySlugRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServer).GetBySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.Org/GetBySlug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServer).GetBySlug(ctx, req.(*GetBySlugRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Org_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.Org",
	HandlerType: (*OrgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Org_Get_Handler,
		},
		{
			MethodName: "GetByAreaId",
			Handler:    _Org_GetByAreaId_Handler,
		},
		{
			MethodName: "GetByManagerId",
			Handler:    _Org_GetByManagerId_Handler,
		},
		{
			MethodName: "GetByMetroId",
			Handler:    _Org_GetByMetroId_Handler,
		},
		{
			MethodName: "GetByOkvedId",
			Handler:    _Org_GetByOkvedId_Handler,
		},
		{
			MethodName: "GetRelated",
			Handler:    _Org_GetRelated_Handler,
		},
		{
			MethodName: "GetBySlug",
			Handler:    _Org_GetBySlug_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "org/org.proto",
}
