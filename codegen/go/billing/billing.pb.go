// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: billing/billing.proto

package billing

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	opts "github.com/nnqq/scr-proto/codegen/go/opts"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_STATUS_NONE Status = 0
	Status_PENDING     Status = 1
	Status_SUCCESS     Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_NONE",
		1: "PENDING",
		2: "SUCCESS",
	}
	Status_value = map[string]int32{
		"STATUS_NONE": 0,
		"PENDING":     1,
		"SUCCESS":     2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_billing_billing_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_billing_billing_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{0}
}

type Kind int32

const (
	Kind_KIND_NONE              Kind = 0
	Kind_DEBIT_ROBOKASSA        Kind = 1
	Kind_CREDIT_COMPANY_PREMIUM Kind = 2
	Kind_DEBIT_MANUAL           Kind = 3
	Kind_CREDIT_DATA_PREMIUM    Kind = 4
)

// Enum value maps for Kind.
var (
	Kind_name = map[int32]string{
		0: "KIND_NONE",
		1: "DEBIT_ROBOKASSA",
		2: "CREDIT_COMPANY_PREMIUM",
		3: "DEBIT_MANUAL",
		4: "CREDIT_DATA_PREMIUM",
	}
	Kind_value = map[string]int32{
		"KIND_NONE":              0,
		"DEBIT_ROBOKASSA":        1,
		"CREDIT_COMPANY_PREMIUM": 2,
		"DEBIT_MANUAL":           3,
		"CREDIT_DATA_PREMIUM":    4,
	}
)

func (x Kind) Enum() *Kind {
	p := new(Kind)
	*p = x
	return p
}

func (x Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_billing_billing_proto_enumTypes[1].Descriptor()
}

func (Kind) Type() protoreflect.EnumType {
	return &file_billing_billing_proto_enumTypes[1]
}

func (x Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kind.Descriptor instead.
func (Kind) EnumDescriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{1}
}

type GetDataPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetDataPlanRequest) Reset() {
	*x = GetDataPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataPlanRequest) ProtoMessage() {}

func (x *GetDataPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataPlanRequest.ProtoReflect.Descriptor instead.
func (*GetDataPlanRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{0}
}

func (x *GetDataPlanRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDataPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Premium         bool   `protobuf:"varint,1,opt,name=premium,proto3" json:"premium,omitempty"`
	PremiumDeadline string `protobuf:"bytes,2,opt,name=premium_deadline,json=premiumDeadline,proto3" json:"premium_deadline,omitempty"`
}

func (x *GetDataPlanResponse) Reset() {
	*x = GetDataPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataPlanResponse) ProtoMessage() {}

func (x *GetDataPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataPlanResponse.ProtoReflect.Descriptor instead.
func (*GetDataPlanResponse) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{1}
}

func (x *GetDataPlanResponse) GetPremium() bool {
	if x != nil {
		return x.Premium
	}
	return false
}

func (x *GetDataPlanResponse) GetPremiumDeadline() string {
	if x != nil {
		return x.PremiumDeadline
	}
	return ""
}

type GetMyDataPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Premium         bool   `protobuf:"varint,1,opt,name=premium,proto3" json:"premium,omitempty"`
	PremiumDeadline string `protobuf:"bytes,2,opt,name=premium_deadline,json=premiumDeadline,proto3" json:"premium_deadline,omitempty"`
}

func (x *GetMyDataPlanResponse) Reset() {
	*x = GetMyDataPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyDataPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyDataPlanResponse) ProtoMessage() {}

func (x *GetMyDataPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyDataPlanResponse.ProtoReflect.Descriptor instead.
func (*GetMyDataPlanResponse) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{2}
}

func (x *GetMyDataPlanResponse) GetPremium() bool {
	if x != nil {
		return x.Premium
	}
	return false
}

func (x *GetMyDataPlanResponse) GetPremiumDeadline() string {
	if x != nil {
		return x.PremiumDeadline
	}
	return ""
}

type GetMyInvoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts *opts.SkipLimit `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *GetMyInvoicesRequest) Reset() {
	*x = GetMyInvoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyInvoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyInvoicesRequest) ProtoMessage() {}

func (x *GetMyInvoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyInvoicesRequest.ProtoReflect.Descriptor instead.
func (*GetMyInvoicesRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{3}
}

func (x *GetMyInvoicesRequest) GetOpts() *opts.SkipLimit {
	if x != nil {
		return x.Opts
	}
	return nil
}

type DebitRobokassa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId uint64 `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
}

func (x *DebitRobokassa) Reset() {
	*x = DebitRobokassa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebitRobokassa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitRobokassa) ProtoMessage() {}

func (x *DebitRobokassa) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitRobokassa.ProtoReflect.Descriptor instead.
func (*DebitRobokassa) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{4}
}

func (x *DebitRobokassa) GetInvoiceId() uint64 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

type CreditCompanyPremium struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId   string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	MonthAmount uint32 `protobuf:"varint,2,opt,name=month_amount,json=monthAmount,proto3" json:"month_amount,omitempty"`
	CompanySlug string `protobuf:"bytes,3,opt,name=company_slug,json=companySlug,proto3" json:"company_slug,omitempty"`
}

func (x *CreditCompanyPremium) Reset() {
	*x = CreditCompanyPremium{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditCompanyPremium) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCompanyPremium) ProtoMessage() {}

func (x *CreditCompanyPremium) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCompanyPremium.ProtoReflect.Descriptor instead.
func (*CreditCompanyPremium) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{5}
}

func (x *CreditCompanyPremium) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CreditCompanyPremium) GetMonthAmount() uint32 {
	if x != nil {
		return x.MonthAmount
	}
	return 0
}

func (x *CreditCompanyPremium) GetCompanySlug() string {
	if x != nil {
		return x.CompanySlug
	}
	return ""
}

type CreditDataPremium struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonthAmount uint32 `protobuf:"varint,1,opt,name=month_amount,json=monthAmount,proto3" json:"month_amount,omitempty"`
}

func (x *CreditDataPremium) Reset() {
	*x = CreditDataPremium{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditDataPremium) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditDataPremium) ProtoMessage() {}

func (x *CreditDataPremium) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditDataPremium.ProtoReflect.Descriptor instead.
func (*CreditDataPremium) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{6}
}

func (x *CreditDataPremium) GetMonthAmount() uint32 {
	if x != nil {
		return x.MonthAmount
	}
	return 0
}

type InvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            string                `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Amount               uint32                `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status               Status                `protobuf:"varint,4,opt,name=status,proto3,enum=billing.Status" json:"status,omitempty"`
	Kind                 Kind                  `protobuf:"varint,5,opt,name=kind,proto3,enum=billing.Kind" json:"kind,omitempty"`
	DebitRobokassa       *DebitRobokassa       `protobuf:"bytes,6,opt,name=debit_robokassa,json=debitRobokassa,proto3" json:"debit_robokassa,omitempty"`
	CreditCompanyPremium *CreditCompanyPremium `protobuf:"bytes,7,opt,name=credit_company_premium,json=creditCompanyPremium,proto3" json:"credit_company_premium,omitempty"`
	CreditDataPremium    *CreditDataPremium    `protobuf:"bytes,8,opt,name=credit_data_premium,json=creditDataPremium,proto3" json:"credit_data_premium,omitempty"`
}

func (x *InvoiceItem) Reset() {
	*x = InvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem) ProtoMessage() {}

func (x *InvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem.ProtoReflect.Descriptor instead.
func (*InvoiceItem) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{7}
}

func (x *InvoiceItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvoiceItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *InvoiceItem) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InvoiceItem) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_NONE
}

func (x *InvoiceItem) GetKind() Kind {
	if x != nil {
		return x.Kind
	}
	return Kind_KIND_NONE
}

func (x *InvoiceItem) GetDebitRobokassa() *DebitRobokassa {
	if x != nil {
		return x.DebitRobokassa
	}
	return nil
}

func (x *InvoiceItem) GetCreditCompanyPremium() *CreditCompanyPremium {
	if x != nil {
		return x.CreditCompanyPremium
	}
	return nil
}

func (x *InvoiceItem) GetCreditDataPremium() *CreditDataPremium {
	if x != nil {
		return x.CreditDataPremium
	}
	return nil
}

type GetMyInvoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invoices []*InvoiceItem `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
}

func (x *GetMyInvoicesResponse) Reset() {
	*x = GetMyInvoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyInvoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyInvoicesResponse) ProtoMessage() {}

func (x *GetMyInvoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyInvoicesResponse.ProtoReflect.Descriptor instead.
func (*GetMyInvoicesResponse) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{8}
}

func (x *GetMyInvoicesResponse) GetInvoices() []*InvoiceItem {
	if x != nil {
		return x.Invoices
	}
	return nil
}

type ManualDebitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// russian penny
	Amount uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ManualDebitRequest) Reset() {
	*x = ManualDebitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualDebitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualDebitRequest) ProtoMessage() {}

func (x *ManualDebitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualDebitRequest.ProtoReflect.Descriptor instead.
func (*ManualDebitRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{9}
}

func (x *ManualDebitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ManualDebitRequest) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RenewCompanyPremiumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId   string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	MonthAmount uint32 `protobuf:"varint,2,opt,name=month_amount,json=monthAmount,proto3" json:"month_amount,omitempty"`
}

func (x *RenewCompanyPremiumRequest) Reset() {
	*x = RenewCompanyPremiumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewCompanyPremiumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewCompanyPremiumRequest) ProtoMessage() {}

func (x *RenewCompanyPremiumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewCompanyPremiumRequest.ProtoReflect.Descriptor instead.
func (*RenewCompanyPremiumRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{10}
}

func (x *RenewCompanyPremiumRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *RenewCompanyPremiumRequest) GetMonthAmount() uint32 {
	if x != nil {
		return x.MonthAmount
	}
	return 0
}

type RenewDataPremiumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonthAmount uint32 `protobuf:"varint,1,opt,name=month_amount,json=monthAmount,proto3" json:"month_amount,omitempty"`
}

func (x *RenewDataPremiumRequest) Reset() {
	*x = RenewDataPremiumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewDataPremiumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewDataPremiumRequest) ProtoMessage() {}

func (x *RenewDataPremiumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewDataPremiumRequest.ProtoReflect.Descriptor instead.
func (*RenewDataPremiumRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{11}
}

func (x *RenewDataPremiumRequest) GetMonthAmount() uint32 {
	if x != nil {
		return x.MonthAmount
	}
	return 0
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{12}
}

func (x *GetBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetMyBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint32 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetMyBalanceResponse) Reset() {
	*x = GetMyBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyBalanceResponse) ProtoMessage() {}

func (x *GetMyBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetMyBalanceResponse) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{13}
}

func (x *GetMyBalanceResponse) GetBalance() uint32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type RobokassaWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	InvId  string `protobuf:"bytes,2,opt,name=inv_id,json=InvId,proto3" json:"inv_id,omitempty"`
	// e.g. 101.66
	OutSum         float32 `protobuf:"fixed32,3,opt,name=out_sum,json=OutSum,proto3" json:"out_sum,omitempty"`
	SignatureValue string  `protobuf:"bytes,4,opt,name=signature_value,json=SignatureValue,proto3" json:"signature_value,omitempty"`
}

func (x *RobokassaWebhookRequest) Reset() {
	*x = RobokassaWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobokassaWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobokassaWebhookRequest) ProtoMessage() {}

func (x *RobokassaWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobokassaWebhookRequest.ProtoReflect.Descriptor instead.
func (*RobokassaWebhookRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{14}
}

func (x *RobokassaWebhookRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *RobokassaWebhookRequest) GetInvId() string {
	if x != nil {
		return x.InvId
	}
	return ""
}

func (x *RobokassaWebhookRequest) GetOutSum() float32 {
	if x != nil {
		return x.OutSum
	}
	return 0
}

func (x *RobokassaWebhookRequest) GetSignatureValue() string {
	if x != nil {
		return x.SignatureValue
	}
	return ""
}

type CreateInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// russian penny
	Amount uint32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreateInvoiceRequest) Reset() {
	*x = CreateInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceRequest) ProtoMessage() {}

func (x *CreateInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CreateInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{15}
}

func (x *CreateInvoiceRequest) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CreateInvoiceResponse) Reset() {
	*x = CreateInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_billing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceResponse) ProtoMessage() {}

func (x *CreateInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_billing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceResponse.ProtoReflect.Descriptor instead.
func (*CreateInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_billing_billing_proto_rawDescGZIP(), []int{16}
}

func (x *CreateInvoiceResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_billing_billing_proto protoreflect.FileDescriptor

var file_billing_billing_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x6f, 0x70, 0x74,
	0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x44,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x5c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70,
	0x74, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x6f, 0x70,
	0x74, 0x73, 0x22, 0x2f, 0x0a, 0x0e, 0x44, 0x65, 0x62, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x6b,
	0x61, 0x73, 0x73, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x6c, 0x75, 0x67,
	0x22, 0x36, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x03, 0x0a, 0x0b, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x64,
	0x65, 0x62, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x6b, 0x61, 0x73, 0x73, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x62, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x6b, 0x61, 0x73, 0x73, 0x61, 0x52, 0x0e, 0x64,
	0x65, 0x62, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x6b, 0x61, 0x73, 0x73, 0x61, 0x12, 0x53, 0x0a,
	0x16, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x14, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x65, 0x6d, 0x69,
	0x75, 0x6d, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x11, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22, 0x49,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x12, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x5e, 0x0a, 0x1a, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x3c, 0x0a, 0x17, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x8a,
	0x01, 0x0a, 0x17, 0x52, 0x6f, 0x62, 0x6f, 0x6b, 0x61, 0x73, 0x73, 0x61, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x53,
	0x75, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x2a, 0x71, 0x0a, 0x04, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f,
	0x4b, 0x41, 0x53, 0x53, 0x41, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x52, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49, 0x55,
	0x4d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x10, 0x04, 0x32, 0xd4,
	0x07, 0x0a, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x74, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x81, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x62, 0x6f, 0x6b, 0x61, 0x73, 0x73, 0x61, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x6f, 0x62, 0x6f, 0x6b, 0x61, 0x73, 0x73, 0x61, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x6b,
	0x61, 0x73, 0x73, 0x61, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x7b, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x7d, 0x12, 0x7e, 0x0a, 0x13, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75,
	0x6d, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x10, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x65, 0x6d,
	0x69, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x79, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x79, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x44, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x62,
	0x69, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6e, 0x71, 0x71, 0x2f, 0x73, 0x63, 0x72, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_billing_billing_proto_rawDescOnce sync.Once
	file_billing_billing_proto_rawDescData = file_billing_billing_proto_rawDesc
)

func file_billing_billing_proto_rawDescGZIP() []byte {
	file_billing_billing_proto_rawDescOnce.Do(func() {
		file_billing_billing_proto_rawDescData = protoimpl.X.CompressGZIP(file_billing_billing_proto_rawDescData)
	})
	return file_billing_billing_proto_rawDescData
}

var file_billing_billing_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_billing_billing_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_billing_billing_proto_goTypes = []interface{}{
	(Status)(0),                        // 0: billing.Status
	(Kind)(0),                          // 1: billing.Kind
	(*GetDataPlanRequest)(nil),         // 2: billing.GetDataPlanRequest
	(*GetDataPlanResponse)(nil),        // 3: billing.GetDataPlanResponse
	(*GetMyDataPlanResponse)(nil),      // 4: billing.GetMyDataPlanResponse
	(*GetMyInvoicesRequest)(nil),       // 5: billing.GetMyInvoicesRequest
	(*DebitRobokassa)(nil),             // 6: billing.DebitRobokassa
	(*CreditCompanyPremium)(nil),       // 7: billing.CreditCompanyPremium
	(*CreditDataPremium)(nil),          // 8: billing.CreditDataPremium
	(*InvoiceItem)(nil),                // 9: billing.InvoiceItem
	(*GetMyInvoicesResponse)(nil),      // 10: billing.GetMyInvoicesResponse
	(*ManualDebitRequest)(nil),         // 11: billing.ManualDebitRequest
	(*RenewCompanyPremiumRequest)(nil), // 12: billing.RenewCompanyPremiumRequest
	(*RenewDataPremiumRequest)(nil),    // 13: billing.RenewDataPremiumRequest
	(*GetBalanceRequest)(nil),          // 14: billing.GetBalanceRequest
	(*GetMyBalanceResponse)(nil),       // 15: billing.GetMyBalanceResponse
	(*RobokassaWebhookRequest)(nil),    // 16: billing.RobokassaWebhookRequest
	(*CreateInvoiceRequest)(nil),       // 17: billing.CreateInvoiceRequest
	(*CreateInvoiceResponse)(nil),      // 18: billing.CreateInvoiceResponse
	(*opts.SkipLimit)(nil),             // 19: opts.SkipLimit
	(*empty.Empty)(nil),                // 20: google.protobuf.Empty
	(*wrappers.StringValue)(nil),       // 21: google.protobuf.StringValue
}
var file_billing_billing_proto_depIdxs = []int32{
	19, // 0: billing.GetMyInvoicesRequest.opts:type_name -> opts.SkipLimit
	0,  // 1: billing.InvoiceItem.status:type_name -> billing.Status
	1,  // 2: billing.InvoiceItem.kind:type_name -> billing.Kind
	6,  // 3: billing.InvoiceItem.debit_robokassa:type_name -> billing.DebitRobokassa
	7,  // 4: billing.InvoiceItem.credit_company_premium:type_name -> billing.CreditCompanyPremium
	8,  // 5: billing.InvoiceItem.credit_data_premium:type_name -> billing.CreditDataPremium
	9,  // 6: billing.GetMyInvoicesResponse.invoices:type_name -> billing.InvoiceItem
	17, // 7: billing.Billing.CreateInvoice:input_type -> billing.CreateInvoiceRequest
	16, // 8: billing.Billing.RobokassaWebhook:input_type -> billing.RobokassaWebhookRequest
	12, // 9: billing.Billing.RenewCompanyPremium:input_type -> billing.RenewCompanyPremiumRequest
	13, // 10: billing.Billing.RenewDataPremium:input_type -> billing.RenewDataPremiumRequest
	20, // 11: billing.Billing.GetMyBalance:input_type -> google.protobuf.Empty
	5,  // 12: billing.Billing.GetMyInvoices:input_type -> billing.GetMyInvoicesRequest
	20, // 13: billing.Billing.GetMyDataPlan:input_type -> google.protobuf.Empty
	11, // 14: billing.Billing.ManualDebit:input_type -> billing.ManualDebitRequest
	2,  // 15: billing.Billing.GetDataPlan:input_type -> billing.GetDataPlanRequest
	18, // 16: billing.Billing.CreateInvoice:output_type -> billing.CreateInvoiceResponse
	21, // 17: billing.Billing.RobokassaWebhook:output_type -> google.protobuf.StringValue
	20, // 18: billing.Billing.RenewCompanyPremium:output_type -> google.protobuf.Empty
	20, // 19: billing.Billing.RenewDataPremium:output_type -> google.protobuf.Empty
	15, // 20: billing.Billing.GetMyBalance:output_type -> billing.GetMyBalanceResponse
	10, // 21: billing.Billing.GetMyInvoices:output_type -> billing.GetMyInvoicesResponse
	4,  // 22: billing.Billing.GetMyDataPlan:output_type -> billing.GetMyDataPlanResponse
	20, // 23: billing.Billing.ManualDebit:output_type -> google.protobuf.Empty
	3,  // 24: billing.Billing.GetDataPlan:output_type -> billing.GetDataPlanResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_billing_billing_proto_init() }
func file_billing_billing_proto_init() {
	if File_billing_billing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_billing_billing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyDataPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyInvoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebitRobokassa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditCompanyPremium); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditDataPremium); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyInvoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualDebitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewCompanyPremiumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewDataPremiumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobokassaWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_billing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_billing_billing_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_billing_billing_proto_goTypes,
		DependencyIndexes: file_billing_billing_proto_depIdxs,
		EnumInfos:         file_billing_billing_proto_enumTypes,
		MessageInfos:      file_billing_billing_proto_msgTypes,
	}.Build()
	File_billing_billing_proto = out.File
	file_billing_billing_proto_rawDesc = nil
	file_billing_billing_proto_goTypes = nil
	file_billing_billing_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BillingClient is the client API for Billing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BillingClient interface {
	CreateInvoice(ctx context.Context, in *CreateInvoiceRequest, opts ...grpc.CallOption) (*CreateInvoiceResponse, error)
	RobokassaWebhook(ctx context.Context, in *RobokassaWebhookRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	RenewCompanyPremium(ctx context.Context, in *RenewCompanyPremiumRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RenewDataPremium(ctx context.Context, in *RenewDataPremiumRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetMyBalance(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMyBalanceResponse, error)
	GetMyInvoices(ctx context.Context, in *GetMyInvoicesRequest, opts ...grpc.CallOption) (*GetMyInvoicesResponse, error)
	GetMyDataPlan(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMyDataPlanResponse, error)
	ManualDebit(ctx context.Context, in *ManualDebitRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetDataPlan(ctx context.Context, in *GetDataPlanRequest, opts ...grpc.CallOption) (*GetDataPlanResponse, error)
}

type billingClient struct {
	cc grpc.ClientConnInterface
}

func NewBillingClient(cc grpc.ClientConnInterface) BillingClient {
	return &billingClient{cc}
}

func (c *billingClient) CreateInvoice(ctx context.Context, in *CreateInvoiceRequest, opts ...grpc.CallOption) (*CreateInvoiceResponse, error) {
	out := new(CreateInvoiceResponse)
	err := c.cc.Invoke(ctx, "/billing.Billing/CreateInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) RobokassaWebhook(ctx context.Context, in *RobokassaWebhookRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/billing.Billing/RobokassaWebhook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) RenewCompanyPremium(ctx context.Context, in *RenewCompanyPremiumRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/billing.Billing/RenewCompanyPremium", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) RenewDataPremium(ctx context.Context, in *RenewDataPremiumRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/billing.Billing/RenewDataPremium", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) GetMyBalance(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMyBalanceResponse, error) {
	out := new(GetMyBalanceResponse)
	err := c.cc.Invoke(ctx, "/billing.Billing/GetMyBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) GetMyInvoices(ctx context.Context, in *GetMyInvoicesRequest, opts ...grpc.CallOption) (*GetMyInvoicesResponse, error) {
	out := new(GetMyInvoicesResponse)
	err := c.cc.Invoke(ctx, "/billing.Billing/GetMyInvoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) GetMyDataPlan(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMyDataPlanResponse, error) {
	out := new(GetMyDataPlanResponse)
	err := c.cc.Invoke(ctx, "/billing.Billing/GetMyDataPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) ManualDebit(ctx context.Context, in *ManualDebitRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/billing.Billing/ManualDebit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) GetDataPlan(ctx context.Context, in *GetDataPlanRequest, opts ...grpc.CallOption) (*GetDataPlanResponse, error) {
	out := new(GetDataPlanResponse)
	err := c.cc.Invoke(ctx, "/billing.Billing/GetDataPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillingServer is the server API for Billing service.
type BillingServer interface {
	CreateInvoice(context.Context, *CreateInvoiceRequest) (*CreateInvoiceResponse, error)
	RobokassaWebhook(context.Context, *RobokassaWebhookRequest) (*wrappers.StringValue, error)
	RenewCompanyPremium(context.Context, *RenewCompanyPremiumRequest) (*empty.Empty, error)
	RenewDataPremium(context.Context, *RenewDataPremiumRequest) (*empty.Empty, error)
	GetMyBalance(context.Context, *empty.Empty) (*GetMyBalanceResponse, error)
	GetMyInvoices(context.Context, *GetMyInvoicesRequest) (*GetMyInvoicesResponse, error)
	GetMyDataPlan(context.Context, *empty.Empty) (*GetMyDataPlanResponse, error)
	ManualDebit(context.Context, *ManualDebitRequest) (*empty.Empty, error)
	GetDataPlan(context.Context, *GetDataPlanRequest) (*GetDataPlanResponse, error)
}

// UnimplementedBillingServer can be embedded to have forward compatible implementations.
type UnimplementedBillingServer struct {
}

func (*UnimplementedBillingServer) CreateInvoice(context.Context, *CreateInvoiceRequest) (*CreateInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInvoice not implemented")
}
func (*UnimplementedBillingServer) RobokassaWebhook(context.Context, *RobokassaWebhookRequest) (*wrappers.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RobokassaWebhook not implemented")
}
func (*UnimplementedBillingServer) RenewCompanyPremium(context.Context, *RenewCompanyPremiumRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewCompanyPremium not implemented")
}
func (*UnimplementedBillingServer) RenewDataPremium(context.Context, *RenewDataPremiumRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewDataPremium not implemented")
}
func (*UnimplementedBillingServer) GetMyBalance(context.Context, *empty.Empty) (*GetMyBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyBalance not implemented")
}
func (*UnimplementedBillingServer) GetMyInvoices(context.Context, *GetMyInvoicesRequest) (*GetMyInvoicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyInvoices not implemented")
}
func (*UnimplementedBillingServer) GetMyDataPlan(context.Context, *empty.Empty) (*GetMyDataPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyDataPlan not implemented")
}
func (*UnimplementedBillingServer) ManualDebit(context.Context, *ManualDebitRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManualDebit not implemented")
}
func (*UnimplementedBillingServer) GetDataPlan(context.Context, *GetDataPlanRequest) (*GetDataPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataPlan not implemented")
}

func RegisterBillingServer(s *grpc.Server, srv BillingServer) {
	s.RegisterService(&_Billing_serviceDesc, srv)
}

func _Billing_CreateInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).CreateInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/CreateInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).CreateInvoice(ctx, req.(*CreateInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_RobokassaWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RobokassaWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).RobokassaWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/RobokassaWebhook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).RobokassaWebhook(ctx, req.(*RobokassaWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_RenewCompanyPremium_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewCompanyPremiumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).RenewCompanyPremium(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/RenewCompanyPremium",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).RenewCompanyPremium(ctx, req.(*RenewCompanyPremiumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_RenewDataPremium_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewDataPremiumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).RenewDataPremium(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/RenewDataPremium",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).RenewDataPremium(ctx, req.(*RenewDataPremiumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_GetMyBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).GetMyBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/GetMyBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).GetMyBalance(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_GetMyInvoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMyInvoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).GetMyInvoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/GetMyInvoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).GetMyInvoices(ctx, req.(*GetMyInvoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_GetMyDataPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).GetMyDataPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/GetMyDataPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).GetMyDataPlan(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_ManualDebit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ManualDebitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).ManualDebit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/ManualDebit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).ManualDebit(ctx, req.(*ManualDebitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_GetDataPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).GetDataPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Billing/GetDataPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).GetDataPlan(ctx, req.(*GetDataPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Billing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "billing.Billing",
	HandlerType: (*BillingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInvoice",
			Handler:    _Billing_CreateInvoice_Handler,
		},
		{
			MethodName: "RobokassaWebhook",
			Handler:    _Billing_RobokassaWebhook_Handler,
		},
		{
			MethodName: "RenewCompanyPremium",
			Handler:    _Billing_RenewCompanyPremium_Handler,
		},
		{
			MethodName: "RenewDataPremium",
			Handler:    _Billing_RenewDataPremium_Handler,
		},
		{
			MethodName: "GetMyBalance",
			Handler:    _Billing_GetMyBalance_Handler,
		},
		{
			MethodName: "GetMyInvoices",
			Handler:    _Billing_GetMyInvoices_Handler,
		},
		{
			MethodName: "GetMyDataPlan",
			Handler:    _Billing_GetMyDataPlan_Handler,
		},
		{
			MethodName: "ManualDebit",
			Handler:    _Billing_ManualDebit_Handler,
		},
		{
			MethodName: "GetDataPlan",
			Handler:    _Billing_GetDataPlan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "billing/billing.proto",
}
