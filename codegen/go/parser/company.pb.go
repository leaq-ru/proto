// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: parser/company.proto

package parser

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	category "github.com/nnqq/scr-proto/codegen/go/category"
	city "github.com/nnqq/scr-proto/codegen/go/city"
	opts "github.com/nnqq/scr-proto/codegen/go/opts"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Sex int32

const (
	Sex_NONE   Sex = 0
	Sex_FEMALE Sex = 1
	Sex_MALE   Sex = 2
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "NONE",
		1: "FEMALE",
		2: "MALE",
	}
	Sex_value = map[string]int32{
		"NONE":   0,
		"FEMALE": 1,
		"MALE":   2,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_parser_company_proto_enumTypes[0].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_parser_company_proto_enumTypes[0]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{0}
}

type IsClosed int32

const (
	IsClosed_OPEN    IsClosed = 0
	IsClosed_CLOSE   IsClosed = 1
	IsClosed_PRIVATE IsClosed = 2
)

// Enum value maps for IsClosed.
var (
	IsClosed_name = map[int32]string{
		0: "OPEN",
		1: "CLOSE",
		2: "PRIVATE",
	}
	IsClosed_value = map[string]int32{
		"OPEN":    0,
		"CLOSE":   1,
		"PRIVATE": 2,
	}
)

func (x IsClosed) Enum() *IsClosed {
	p := new(IsClosed)
	*p = x
	return p
}

func (x IsClosed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsClosed) Descriptor() protoreflect.EnumDescriptor {
	return file_parser_company_proto_enumTypes[1].Descriptor()
}

func (IsClosed) Type() protoreflect.EnumType {
	return &file_parser_company_proto_enumTypes[1]
}

func (x IsClosed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsClosed.Descriptor instead.
func (IsClosed) EnumDescriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{1}
}

type GetRelatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	CityId     string `protobuf:"bytes,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CategoryId string `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *GetRelatedRequest) Reset() {
	*x = GetRelatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelatedRequest) ProtoMessage() {}

func (x *GetRelatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelatedRequest.ProtoReflect.Descriptor instead.
func (*GetRelatedRequest) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{0}
}

func (x *GetRelatedRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRelatedRequest) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *GetRelatedRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type GetRelatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCompanies []*ShortCompany `protobuf:"bytes,1,rep,name=short_companies,json=shortCompanies,proto3" json:"short_companies,omitempty"`
}

func (x *GetRelatedResponse) Reset() {
	*x = GetRelatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelatedResponse) ProtoMessage() {}

func (x *GetRelatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelatedResponse.ProtoReflect.Descriptor instead.
func (*GetRelatedResponse) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{1}
}

func (x *GetRelatedResponse) GetShortCompanies() []*ShortCompany {
	if x != nil {
		return x.ShortCompanies
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts       *opts.Opts `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	CityId     string     `protobuf:"bytes,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CategoryId string     `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetOpts() *opts.Opts {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GetRequest) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *GetRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCompanies []*ShortCompany `protobuf:"bytes,1,rep,name=short_companies,json=shortCompanies,proto3" json:"short_companies,omitempty"`
	TotalCount     uint32          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetShortCompanies() []*ShortCompany {
	if x != nil {
		return x.ShortCompanies
	}
	return nil
}

func (x *GetResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetBySlugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetBySlugRequest) Reset() {
	*x = GetBySlugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBySlugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBySlugRequest) ProtoMessage() {}

func (x *GetBySlugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBySlugRequest.ProtoReflect.Descriptor instead.
func (*GetBySlugRequest) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{4}
}

func (x *GetBySlugRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type FullCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Category    *category.CategoryItem `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Url         string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Slug        string                 `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Title       string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Email       string                 `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Description string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Online      bool                   `protobuf:"varint,8,opt,name=online,proto3" json:"online,omitempty"`
	Phone       float64                `protobuf:"fixed64,9,opt,name=phone,proto3" json:"phone,omitempty"`
	Inn         float64                `protobuf:"fixed64,10,opt,name=inn,proto3" json:"inn,omitempty"`
	Kpp         float64                `protobuf:"fixed64,11,opt,name=kpp,proto3" json:"kpp,omitempty"`
	Ogrn        float64                `protobuf:"fixed64,12,opt,name=ogrn,proto3" json:"ogrn,omitempty"`
	Domain      *Domain                `protobuf:"bytes,13,opt,name=domain,proto3" json:"domain,omitempty"`
	Avatar      string                 `protobuf:"bytes,14,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Location    *Location              `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	App         *App                   `protobuf:"bytes,16,opt,name=app,proto3" json:"app,omitempty"`
	Social      *Social                `protobuf:"bytes,17,opt,name=social,proto3" json:"social,omitempty"`
	People      []*People              `protobuf:"bytes,18,rep,name=people,proto3" json:"people,omitempty"`
	UpdatedAt   string                 `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FullCompany) Reset() {
	*x = FullCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullCompany) ProtoMessage() {}

func (x *FullCompany) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullCompany.ProtoReflect.Descriptor instead.
func (*FullCompany) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{5}
}

func (x *FullCompany) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullCompany) GetCategory() *category.CategoryItem {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *FullCompany) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FullCompany) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *FullCompany) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FullCompany) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FullCompany) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FullCompany) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *FullCompany) GetPhone() float64 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *FullCompany) GetInn() float64 {
	if x != nil {
		return x.Inn
	}
	return 0
}

func (x *FullCompany) GetKpp() float64 {
	if x != nil {
		return x.Kpp
	}
	return 0
}

func (x *FullCompany) GetOgrn() float64 {
	if x != nil {
		return x.Ogrn
	}
	return 0
}

func (x *FullCompany) GetDomain() *Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *FullCompany) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FullCompany) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *FullCompany) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *FullCompany) GetSocial() *Social {
	if x != nil {
		return x.Social
	}
	return nil
}

func (x *FullCompany) GetPeople() []*People {
	if x != nil {
		return x.People
	}
	return nil
}

func (x *FullCompany) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ShortCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId string  `protobuf:"bytes,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Url        string  `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Slug       string  `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Title      string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Email      string  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Online     bool    `protobuf:"varint,7,opt,name=online,proto3" json:"online,omitempty"`
	Phone      float64 `protobuf:"fixed64,8,opt,name=phone,proto3" json:"phone,omitempty"`
	Avatar     string  `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ShortCompany) Reset() {
	*x = ShortCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortCompany) ProtoMessage() {}

func (x *ShortCompany) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortCompany.ProtoReflect.Descriptor instead.
func (*ShortCompany) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{6}
}

func (x *ShortCompany) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShortCompany) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *ShortCompany) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShortCompany) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ShortCompany) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShortCompany) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ShortCompany) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *ShortCompany) GetPhone() float64 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *ShortCompany) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type People struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VkId        float64 `protobuf:"fixed64,1,opt,name=vk_id,json=vkId,proto3" json:"vk_id,omitempty"`
	FirstName   string  `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string  `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	VkIsClosed  bool    `protobuf:"varint,4,opt,name=vk_is_closed,json=vkIsClosed,proto3" json:"vk_is_closed,omitempty"`
	Sex         Sex     `protobuf:"varint,5,opt,name=sex,proto3,enum=parser.Sex" json:"sex,omitempty"`
	Photo_200   string  `protobuf:"bytes,6,opt,name=photo_200,json=photo200,proto3" json:"photo_200,omitempty"`
	Phone       float64 `protobuf:"fixed64,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email       string  `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Description string  `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *People) Reset() {
	*x = People{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *People) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*People) ProtoMessage() {}

func (x *People) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use People.ProtoReflect.Descriptor instead.
func (*People) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{7}
}

func (x *People) GetVkId() float64 {
	if x != nil {
		return x.VkId
	}
	return 0
}

func (x *People) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *People) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *People) GetVkIsClosed() bool {
	if x != nil {
		return x.VkIsClosed
	}
	return false
}

func (x *People) GetSex() Sex {
	if x != nil {
		return x.Sex
	}
	return Sex_NONE
}

func (x *People) GetPhoto_200() string {
	if x != nil {
		return x.Photo_200
	}
	return ""
}

func (x *People) GetPhone() float64 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *People) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *People) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Social struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vk        *Vk      `protobuf:"bytes,1,opt,name=vk,proto3" json:"vk,omitempty"`
	Instagram *UrlItem `protobuf:"bytes,2,opt,name=instagram,proto3" json:"instagram,omitempty"`
	Twitter   *UrlItem `protobuf:"bytes,3,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Youtube   *UrlItem `protobuf:"bytes,4,opt,name=youtube,proto3" json:"youtube,omitempty"`
	Facebook  *UrlItem `protobuf:"bytes,5,opt,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *Social) Reset() {
	*x = Social{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Social) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Social) ProtoMessage() {}

func (x *Social) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Social.ProtoReflect.Descriptor instead.
func (*Social) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{8}
}

func (x *Social) GetVk() *Vk {
	if x != nil {
		return x.Vk
	}
	return nil
}

func (x *Social) GetInstagram() *UrlItem {
	if x != nil {
		return x.Instagram
	}
	return nil
}

func (x *Social) GetTwitter() *UrlItem {
	if x != nil {
		return x.Twitter
	}
	return nil
}

func (x *Social) GetYoutube() *UrlItem {
	if x != nil {
		return x.Youtube
	}
	return nil
}

func (x *Social) GetFacebook() *UrlItem {
	if x != nil {
		return x.Facebook
	}
	return nil
}

type Vk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId      float64  `protobuf:"fixed64,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ScreenName   string   `protobuf:"bytes,3,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty"`
	IsClosed     IsClosed `protobuf:"varint,4,opt,name=is_closed,json=isClosed,proto3,enum=parser.IsClosed" json:"is_closed,omitempty"`
	Description  string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	MembersCount float64  `protobuf:"fixed64,6,opt,name=members_count,json=membersCount,proto3" json:"members_count,omitempty"`
	Photo_200    string   `protobuf:"bytes,7,opt,name=photo_200,json=photo200,proto3" json:"photo_200,omitempty"`
}

func (x *Vk) Reset() {
	*x = Vk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vk) ProtoMessage() {}

func (x *Vk) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vk.ProtoReflect.Descriptor instead.
func (*Vk) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{9}
}

func (x *Vk) GetGroupId() float64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Vk) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vk) GetScreenName() string {
	if x != nil {
		return x.ScreenName
	}
	return ""
}

func (x *Vk) GetIsClosed() IsClosed {
	if x != nil {
		return x.IsClosed
	}
	return IsClosed_OPEN
}

func (x *Vk) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Vk) GetMembersCount() float64 {
	if x != nil {
		return x.MembersCount
	}
	return 0
}

func (x *Vk) GetPhoto_200() string {
	if x != nil {
		return x.Photo_200
	}
	return ""
}

type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppStore   *UrlItem `protobuf:"bytes,1,opt,name=app_store,json=appStore,proto3" json:"app_store,omitempty"`
	GooglePlay *UrlItem `protobuf:"bytes,2,opt,name=google_play,json=googlePlay,proto3" json:"google_play,omitempty"`
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{10}
}

func (x *App) GetAppStore() *UrlItem {
	if x != nil {
		return x.AppStore
	}
	return nil
}

func (x *App) GetGooglePlay() *UrlItem {
	if x != nil {
		return x.GooglePlay
	}
	return nil
}

type UrlItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UrlItem) Reset() {
	*x = UrlItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlItem) ProtoMessage() {}

func (x *UrlItem) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlItem.ProtoReflect.Descriptor instead.
func (*UrlItem) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{11}
}

func (x *UrlItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Registrar        string `protobuf:"bytes,2,opt,name=registrar,proto3" json:"registrar,omitempty"`
	RegistrationDate string `protobuf:"bytes,3,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{12}
}

func (x *Domain) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Domain) GetRegistrar() string {
	if x != nil {
		return x.Registrar
	}
	return ""
}

func (x *Domain) GetRegistrationDate() string {
	if x != nil {
		return x.RegistrationDate
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City         *city.CityItem `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Address      string         `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	AddressTitle string         `protobuf:"bytes,3,opt,name=address_title,json=addressTitle,proto3" json:"address_title,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parser_company_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_parser_company_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_parser_company_proto_rawDescGZIP(), []int{13}
}

func (x *Location) GetCity() *city.CityItem {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *Location) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Location) GetAddressTitle() string {
	if x != nil {
		return x.AddressTitle
	}
	return ""
}

var File_parser_company_proto protoreflect.FileDescriptor

var file_parser_company_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x6f,
	0x70, 0x74, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x14, 0x92, 0x41, 0x11, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x40,
	0xd2, 0x01, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x0e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x22, 0x66,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x6f, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6f, 0x70, 0x74,
	0x73, 0x2e, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c,
	0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x07, 0xd2, 0x01, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0xba, 0xe9, 0xc0, 0x03, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x22, 0xa7, 0x04, 0x0a, 0x0b, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x69, 0x6e, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70,
	0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6b, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x67, 0x72, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x67, 0x72, 0x6e,
	0x12, 0x26, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x06, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd7, 0x01, 0x0a,
	0x0c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x85, 0x02, 0x0a, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x76, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x76, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x6b, 0x5f, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x6b, 0x49, 0x73, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x78, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x32, 0x30, 0x30,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x30, 0x30,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd6,
	0x01, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x02, 0x76, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x56,
	0x6b, 0x52, 0x02, 0x76, 0x6b, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x2e, 0x55, 0x72, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x72, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x72, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x72, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0xe7, 0x01, 0x0a, 0x02, 0x56, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x32, 0x30,
	0x30, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x30,
	0x30, 0x22, 0x65, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x2c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x72, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x72, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x22, 0x1b, 0x0a, 0x07, 0x55, 0x72, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x6d, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x2a, 0x25, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x2c, 0x0a, 0x08, 0x49, 0x73,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32, 0x89, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x56, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75,
	0x67, 0x12, 0x18, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x44, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x67,
	0x65, 0x74, 0x12, 0x60, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12,
	0x13, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x6e, 0x71, 0x71, 0x2f, 0x73, 0x63, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parser_company_proto_rawDescOnce sync.Once
	file_parser_company_proto_rawDescData = file_parser_company_proto_rawDesc
)

func file_parser_company_proto_rawDescGZIP() []byte {
	file_parser_company_proto_rawDescOnce.Do(func() {
		file_parser_company_proto_rawDescData = protoimpl.X.CompressGZIP(file_parser_company_proto_rawDescData)
	})
	return file_parser_company_proto_rawDescData
}

var file_parser_company_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_parser_company_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_parser_company_proto_goTypes = []interface{}{
	(Sex)(0),                      // 0: parser.Sex
	(IsClosed)(0),                 // 1: parser.IsClosed
	(*GetRelatedRequest)(nil),     // 2: parser.GetRelatedRequest
	(*GetRelatedResponse)(nil),    // 3: parser.GetRelatedResponse
	(*GetRequest)(nil),            // 4: parser.GetRequest
	(*GetResponse)(nil),           // 5: parser.GetResponse
	(*GetBySlugRequest)(nil),      // 6: parser.GetBySlugRequest
	(*FullCompany)(nil),           // 7: parser.FullCompany
	(*ShortCompany)(nil),          // 8: parser.ShortCompany
	(*People)(nil),                // 9: parser.People
	(*Social)(nil),                // 10: parser.Social
	(*Vk)(nil),                    // 11: parser.Vk
	(*App)(nil),                   // 12: parser.App
	(*UrlItem)(nil),               // 13: parser.UrlItem
	(*Domain)(nil),                // 14: parser.Domain
	(*Location)(nil),              // 15: parser.Location
	(*opts.Opts)(nil),             // 16: opts.Opts
	(*category.CategoryItem)(nil), // 17: category.CategoryItem
	(*city.CityItem)(nil),         // 18: city.CityItem
}
var file_parser_company_proto_depIdxs = []int32{
	8,  // 0: parser.GetRelatedResponse.short_companies:type_name -> parser.ShortCompany
	16, // 1: parser.GetRequest.opts:type_name -> opts.Opts
	8,  // 2: parser.GetResponse.short_companies:type_name -> parser.ShortCompany
	17, // 3: parser.FullCompany.category:type_name -> category.CategoryItem
	14, // 4: parser.FullCompany.domain:type_name -> parser.Domain
	15, // 5: parser.FullCompany.location:type_name -> parser.Location
	12, // 6: parser.FullCompany.app:type_name -> parser.App
	10, // 7: parser.FullCompany.social:type_name -> parser.Social
	9,  // 8: parser.FullCompany.people:type_name -> parser.People
	0,  // 9: parser.People.sex:type_name -> parser.Sex
	11, // 10: parser.Social.vk:type_name -> parser.Vk
	13, // 11: parser.Social.instagram:type_name -> parser.UrlItem
	13, // 12: parser.Social.twitter:type_name -> parser.UrlItem
	13, // 13: parser.Social.youtube:type_name -> parser.UrlItem
	13, // 14: parser.Social.facebook:type_name -> parser.UrlItem
	1,  // 15: parser.Vk.is_closed:type_name -> parser.IsClosed
	13, // 16: parser.App.app_store:type_name -> parser.UrlItem
	13, // 17: parser.App.google_play:type_name -> parser.UrlItem
	18, // 18: parser.Location.city:type_name -> city.CityItem
	6,  // 19: parser.Company.GetBySlug:input_type -> parser.GetBySlugRequest
	4,  // 20: parser.Company.Get:input_type -> parser.GetRequest
	2,  // 21: parser.Company.GetRelated:input_type -> parser.GetRelatedRequest
	7,  // 22: parser.Company.GetBySlug:output_type -> parser.FullCompany
	5,  // 23: parser.Company.Get:output_type -> parser.GetResponse
	3,  // 24: parser.Company.GetRelated:output_type -> parser.GetRelatedResponse
	22, // [22:25] is the sub-list for method output_type
	19, // [19:22] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_parser_company_proto_init() }
func file_parser_company_proto_init() {
	if File_parser_company_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_parser_company_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBySlugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*People); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Social); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parser_company_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parser_company_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parser_company_proto_goTypes,
		DependencyIndexes: file_parser_company_proto_depIdxs,
		EnumInfos:         file_parser_company_proto_enumTypes,
		MessageInfos:      file_parser_company_proto_msgTypes,
	}.Build()
	File_parser_company_proto = out.File
	file_parser_company_proto_rawDesc = nil
	file_parser_company_proto_goTypes = nil
	file_parser_company_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CompanyClient is the client API for Company service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CompanyClient interface {
	GetBySlug(ctx context.Context, in *GetBySlugRequest, opts ...grpc.CallOption) (*FullCompany, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetRelated(ctx context.Context, in *GetRelatedRequest, opts ...grpc.CallOption) (*GetRelatedResponse, error)
}

type companyClient struct {
	cc grpc.ClientConnInterface
}

func NewCompanyClient(cc grpc.ClientConnInterface) CompanyClient {
	return &companyClient{cc}
}

func (c *companyClient) GetBySlug(ctx context.Context, in *GetBySlugRequest, opts ...grpc.CallOption) (*FullCompany, error) {
	out := new(FullCompany)
	err := c.cc.Invoke(ctx, "/parser.Company/GetBySlug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/parser.Company/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyClient) GetRelated(ctx context.Context, in *GetRelatedRequest, opts ...grpc.CallOption) (*GetRelatedResponse, error) {
	out := new(GetRelatedResponse)
	err := c.cc.Invoke(ctx, "/parser.Company/GetRelated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CompanyServer is the server API for Company service.
type CompanyServer interface {
	GetBySlug(context.Context, *GetBySlugRequest) (*FullCompany, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	GetRelated(context.Context, *GetRelatedRequest) (*GetRelatedResponse, error)
}

// UnimplementedCompanyServer can be embedded to have forward compatible implementations.
type UnimplementedCompanyServer struct {
}

func (*UnimplementedCompanyServer) GetBySlug(context.Context, *GetBySlugRequest) (*FullCompany, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBySlug not implemented")
}
func (*UnimplementedCompanyServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCompanyServer) GetRelated(context.Context, *GetRelatedRequest) (*GetRelatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelated not implemented")
}

func RegisterCompanyServer(s *grpc.Server, srv CompanyServer) {
	s.RegisterService(&_Company_serviceDesc, srv)
}

func _Company_GetBySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBySlugRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServer).GetBySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parser.Company/GetBySlug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServer).GetBySlug(ctx, req.(*GetBySlugRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Company_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parser.Company/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Company_GetRelated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServer).GetRelated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parser.Company/GetRelated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServer).GetRelated(ctx, req.(*GetRelatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Company_serviceDesc = grpc.ServiceDesc{
	ServiceName: "parser.Company",
	HandlerType: (*CompanyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBySlug",
			Handler:    _Company_GetBySlug_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Company_Get_Handler,
		},
		{
			MethodName: "GetRelated",
			Handler:    _Company_GetRelated_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "parser/company.proto",
}
