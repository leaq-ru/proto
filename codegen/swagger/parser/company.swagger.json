{
  "swagger": "2.0",
  "info": {
    "title": "parser/company.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/company/edit": {
      "patch": {
        "summary": "edit companies where current user is owner or admin",
        "operationId": "Company_Edit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/parserEditRequest"
            }
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/get": {
      "get": {
        "summary": "DEPRECATED",
        "operationId": "Company_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "opts.fromId",
            "description": "Pagination (skip)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "opts.limit",
            "description": "20 default",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cityIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categoryIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hasEmail",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasPhone",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOnline",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasInn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasKpp",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOgrn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasAppStore",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasGooglePlay",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasVk",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "vkMembersCount.from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vkMembersCount.to",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hasInstagram",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasTwitter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasYoutube",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasFacebook",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "excludeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "technologyIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "technologyFindRule",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "default": "ONE_OF"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getBySlug": {
      "get": {
        "summary": "DEPRECATED",
        "operationId": "Company_GetBySlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserFullCompany"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getBySlugs": {
      "get": {
        "operationId": "Company_GetBySlugs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserShortCompanies"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "opts.skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opts.limit",
            "description": "20 default",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opts.excludeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "citySlug",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "categorySlug",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "technologySlug",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getEmailList": {
      "get": {
        "operationId": "Company_GetEmailList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "cityIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categoryIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hasEmail",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasPhone",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOnline",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasInn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasKpp",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOgrn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasAppStore",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasGooglePlay",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasVk",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "vkMembersCount.from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vkMembersCount.to",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hasInstagram",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasTwitter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasYoutube",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasFacebook",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "technologyIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "technologyFindRule",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "default": "ONE_OF"
          },
          {
            "name": "dnsIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getMy": {
      "get": {
        "summary": "get companies where current user is owner or admin",
        "operationId": "Company_GetMy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetMyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "opts.skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opts.limit",
            "description": "20 default",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getPhoneList": {
      "get": {
        "operationId": "Company_GetPhoneList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "cityIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categoryIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hasEmail",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasPhone",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOnline",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasInn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasKpp",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOgrn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasAppStore",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasGooglePlay",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasVk",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "vkMembersCount.from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vkMembersCount.to",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hasInstagram",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasTwitter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasYoutube",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasFacebook",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "technologyIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "technologyFindRule",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "default": "ONE_OF"
          },
          {
            "name": "dnsIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getRelated": {
      "get": {
        "summary": "DEPRECATED: to get related companies use /v{latest}/company/get with cityIds, categoryIds and excludeIds",
        "operationId": "Company_GetRelated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetRelatedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "5 default",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v1/company/getTotalCount": {
      "get": {
        "operationId": "Company_GetTotalCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetTotalCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/v2/company/get": {
      "get": {
        "operationId": "Company_GetV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserShortCompanies"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "opts.skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opts.limit",
            "description": "20 default",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opts.excludeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "cityIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categoryIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hasEmail",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasPhone",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOnline",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasInn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasKpp",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasOgrn",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasAppStore",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasGooglePlay",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasVk",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "vkMembersCount.from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vkMembersCount.to",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hasInstagram",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasTwitter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasYoutube",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "hasFacebook",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "default": "ANY"
          },
          {
            "name": "technologyIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "technologyFindRule",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "default": "ONE_OF"
          },
          {
            "name": "companyIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dnsIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    },
    "/v2/company/getBySlug": {
      "get": {
        "operationId": "Company_GetBySlugV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetBySlugResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Company"
        ]
      }
    }
  },
  "definitions": {
    "categoryCategoryItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "cityCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "optsOpts": {
      "type": "object",
      "properties": {
        "fromId": {
          "type": "string",
          "description": "Pagination (skip)"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "20 default",
          "maximum": 100,
          "minimum": 1
        }
      }
    },
    "optsPage": {
      "type": "object",
      "properties": {
        "skip": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "20 default",
          "maximum": 100,
          "minimum": 1
        },
        "excludeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "optsSkipLimit": {
      "type": "object",
      "properties": {
        "skip": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "20 default",
          "maximum": 100,
          "minimum": 1
        }
      }
    },
    "parserApp": {
      "type": "object",
      "properties": {
        "appStore": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "googlePlay": {
          "$ref": "#/definitions/parserUrlItem"
        }
      }
    },
    "parserDnsItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "parserDomain": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "registrar": {
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        }
      }
    },
    "parserEditRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "addressStreet": {
          "type": "string"
        },
        "addressHouse": {
          "type": "string"
        },
        "vkUrl": {
          "type": "string"
        },
        "instagramUrl": {
          "type": "string"
        },
        "youtubeUrl": {
          "type": "string"
        },
        "facebookUrl": {
          "type": "string"
        },
        "twitterUrl": {
          "type": "string"
        },
        "appStoreUrl": {
          "type": "string"
        },
        "googlePlayUrl": {
          "type": "string"
        },
        "inn": {
          "type": "number",
          "format": "double"
        },
        "kpp": {
          "type": "number",
          "format": "double"
        },
        "ogrn": {
          "type": "number",
          "format": "double"
        },
        "avatarBase64": {
          "type": "string"
        },
        "cityId": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        }
      }
    },
    "parserFindRule": {
      "type": "string",
      "enum": [
        "ONE_OF",
        "ALL"
      ],
      "default": "ONE_OF"
    },
    "parserFullCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "url": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "online": {
          "type": "boolean",
          "format": "boolean"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "inn": {
          "type": "number",
          "format": "double"
        },
        "kpp": {
          "type": "number",
          "format": "double"
        },
        "ogrn": {
          "type": "number",
          "format": "double"
        },
        "domain": {
          "$ref": "#/definitions/parserDomain"
        },
        "avatar": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/parserFullLocation"
        },
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "social": {
          "$ref": "#/definitions/parserSocial"
        },
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPeople"
          }
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "parserFullCompanyV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "url": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "online": {
          "type": "boolean",
          "format": "boolean"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "inn": {
          "type": "number",
          "format": "double"
        },
        "kpp": {
          "type": "number",
          "format": "double"
        },
        "ogrn": {
          "type": "number",
          "format": "double"
        },
        "domain": {
          "$ref": "#/definitions/parserDomain"
        },
        "avatar": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/parserFullLocation"
        },
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "social": {
          "$ref": "#/definitions/parserSocial"
        },
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPeople"
          }
        },
        "updatedAt": {
          "type": "string"
        },
        "technologyCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserTechnologyCategory"
          }
        },
        "pageSpeed": {
          "type": "integer",
          "format": "int64",
          "title": "milliseconds"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "dns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserDnsItem"
          }
        }
      }
    },
    "parserFullLocation": {
      "type": "object",
      "properties": {
        "city": {
          "$ref": "#/definitions/cityCityItem"
        },
        "address": {
          "type": "string"
        },
        "addressTitle": {
          "type": "string"
        }
      }
    },
    "parserGetBySlugResponse": {
      "type": "object",
      "properties": {
        "fullCompany": {
          "$ref": "#/definitions/parserFullCompany"
        },
        "technologyCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserTechnologyCategory"
          }
        },
        "pageSpeed": {
          "type": "integer",
          "format": "int64",
          "title": "milliseconds"
        },
        "related": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserShortCompany"
          }
        },
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPostItem"
          }
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "dns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserDnsItem"
          }
        },
        "reviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserReviewItem"
          }
        }
      }
    },
    "parserGetCountResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "parserGetListResponse": {
      "type": "object",
      "properties": {
        "downloadUrl": {
          "type": "string"
        }
      }
    },
    "parserGetMyResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserMyCompany"
          }
        }
      }
    },
    "parserGetRelatedResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserFullCompany"
          }
        }
      }
    },
    "parserGetResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserFullCompany"
          }
        }
      }
    },
    "parserGetTotalCountResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "parserGetV2Request": {
      "type": "object",
      "properties": {
        "opts": {
          "$ref": "#/definitions/optsPage"
        },
        "cityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hasEmail": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasPhone": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasOnline": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasInn": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasKpp": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasOgrn": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasAppStore": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasGooglePlay": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasVk": {
          "$ref": "#/definitions/parserSelect"
        },
        "vkMembersCount": {
          "$ref": "#/definitions/parserVkMembersCount"
        },
        "hasInstagram": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasTwitter": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasYoutube": {
          "$ref": "#/definitions/parserSelect"
        },
        "hasFacebook": {
          "$ref": "#/definitions/parserSelect"
        },
        "technologyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technologyFindRule": {
          "$ref": "#/definitions/parserFindRule"
        },
        "companyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "parserIsClosed": {
      "type": "string",
      "enum": [
        "OPEN",
        "CLOSE",
        "PRIVATE"
      ],
      "default": "OPEN"
    },
    "parserIsCompanyAvatarExistsResponse": {
      "type": "object",
      "properties": {
        "isExists": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "parserMyCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "url": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "avatar": {
          "type": "string"
        },
        "city": {
          "$ref": "#/definitions/cityCityItem"
        },
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "social": {
          "$ref": "#/definitions/parserShortSocial"
        },
        "updatedAt": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "premiumDeadline": {
          "type": "string"
        }
      }
    },
    "parserPeople": {
      "type": "object",
      "properties": {
        "vkId": {
          "type": "number",
          "format": "double"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "vkIsClosed": {
          "type": "boolean",
          "format": "boolean"
        },
        "sex": {
          "$ref": "#/definitions/parserSex"
        },
        "photo200": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "parserPhotoItem": {
      "type": "object",
      "properties": {
        "urlM": {
          "type": "string"
        },
        "urlR": {
          "type": "string"
        }
      }
    },
    "parserPostItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPhotoItem"
          }
        }
      }
    },
    "parserReviewItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/userShortUser"
        },
        "createdAt": {
          "type": "string"
        },
        "positive": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "parserSelect": {
      "type": "string",
      "enum": [
        "ANY",
        "YES",
        "NO"
      ],
      "default": "ANY"
    },
    "parserSex": {
      "type": "string",
      "enum": [
        "NONE",
        "FEMALE",
        "MALE"
      ],
      "default": "NONE"
    },
    "parserShortCompanies": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserShortCompany"
          }
        }
      }
    },
    "parserShortCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "url": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "avatar": {
          "type": "string"
        },
        "city": {
          "$ref": "#/definitions/cityCityItem"
        },
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "social": {
          "$ref": "#/definitions/parserShortSocial"
        },
        "updatedAt": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "parserShortSocial": {
      "type": "object",
      "properties": {
        "vk": {
          "$ref": "#/definitions/parserShortVk"
        },
        "instagram": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "twitter": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "youtube": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "facebook": {
          "$ref": "#/definitions/parserUrlItem"
        }
      }
    },
    "parserShortVk": {
      "type": "object",
      "properties": {
        "screenName": {
          "type": "string"
        },
        "membersCount": {
          "type": "number",
          "format": "double"
        },
        "groupId": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "parserSocial": {
      "type": "object",
      "properties": {
        "vk": {
          "$ref": "#/definitions/parserVk"
        },
        "instagram": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "twitter": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "youtube": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "facebook": {
          "$ref": "#/definitions/parserUrlItem"
        }
      }
    },
    "parserTechnologyCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "technologies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserTechnologyItem"
          }
        }
      }
    },
    "parserTechnologyItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "parserUrlItem": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "parserVk": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        },
        "isClosed": {
          "$ref": "#/definitions/parserIsClosed"
        },
        "description": {
          "type": "string"
        },
        "membersCount": {
          "type": "number",
          "format": "double"
        },
        "photo200": {
          "type": "string"
        }
      }
    },
    "parserVkMembersCount": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpcCode": {
          "type": "integer",
          "format": "int32"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "httpStatus": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userShortUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vkId": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        },
        "photoRec": {
          "type": "string"
        },
        "banReview": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  }
}
