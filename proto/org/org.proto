syntax = "proto3";

package org;
option go_package = "github.com/nnqq/scr-proto/codegen/go/org";

import "google/api/annotations.proto";
import "opts/page.proto";

service Org {
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/get"
    };
  };
  rpc GetByAreaId(GetByAreaIdRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/getByAreaId"
    };
  };
  rpc GetAreaBySlug(GetAreaBySlugRequest) returns (GetAreaBySlugResponse) {
    option (google.api.http) = {
      get: "/v1/org/getAreaBySlug"
    };
  };
  rpc GetByManagerId(GetByManagerIdRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/getByManagerId"
    };
  };
  rpc GetManagerBySlug(GetManagerBySlugRequest) returns (GetManagerBySlugResponse) {
    option (google.api.http) = {
      get: "/v1/org/getManagerBySlug"
    };
  };
  rpc GetByMetroId(GetByMetroIdRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/getByMetroId"
    };
  };
  rpc GetMetroBySlug(GetMetroBySlugRequest) returns (GetMetroBySlugResponse) {
    option (google.api.http) = {
      get: "/v1/org/getMetroBySlug"
    };
  };
  rpc GetByOkvedId(GetByOkvedIdRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/getByOkvedId"
    };
  };
  rpc GetOkvedBySlug(GetOkvedBySlugRequest) returns (GetOkvedBySlugResponse) {
    option (google.api.http) = {
      get: "/v1/org/getOkvedBySlug"
    };
  };
  rpc GetByLocationId(GetByLocationIdRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/getByLocationId"
    };
  };
  rpc GetLocationBySlug(GetLocationBySlugRequest) returns (GetLocationBySlugResponse) {
    option (google.api.http) = {
      get: "/v1/org/getLocationBySlug"
    };
  };
  rpc GetRelated(GetRelatedRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/getRelated"
    };
  };
  rpc GetBySlug(GetBySlugRequest) returns (GetBySlugResponse) {
    option (google.api.http) = {
      get: "/v1/org/getBySlug"
    };
  };
}

message GetAreaBySlugRequest {
  string slug = 1;
}

message AreaFullItem {
  string id = 1;
  string slug = 2;
  string name = 3;
  string fias_id = 4;
  string kladr_id = 5;
  string type = 6;
  string type_full = 7;
}

message GetAreaBySlugResponse {
  AreaFullItem area = 1;
}

message GetManagerBySlugRequest {
  string slug = 1;
}

message GetMetroBySlugRequest {
  string slug = 1;
}

message GetOkvedBySlugRequest {
  string slug = 1;
}

message GetLocationBySlugRequest {
  string slug = 1;
}

message GetRelatedRequest {
  opts.SkipLimit opts = 1;
  string area_id = 2;
  string okved_id = 3;
}

message GetByAreaIdRequest {
  opts.SkipLimit opts = 1;
  string area_id = 2;
}

message GetByLocationIdRequest {
  opts.SkipLimit opts = 1;
  string location_id = 2;
}

message GetByManagerIdRequest {
  opts.SkipLimit opts = 1;
  string manager_id = 2;
}

message GetByMetroIdRequest {
  opts.SkipLimit opts = 1;
  string metro_id = 2;
}

message GetByOkvedIdRequest {
  opts.SkipLimit opts = 1;
  string okved_id = 2;
}

message GetBySlugRequest {
  string slug = 1;
}

message Main {
  string id = 1;
  string slug = 2;
  string name = 3;
  double inn = 4;
  double kpp = 5;
  double ogrn = 6;
  OrgKind kind = 7;
  ManagerItem manager = 8;
  AreaFullItem area = 9;
  LocationItem location = 10;
  OkvedFullItem okved = 11;
  StatusKind status_kind = 12;
  repeated OkvedItem okved_dop = 13;
  uint32 employee_count = 14;
  repeated MetroFullItem metros = 15;
  string name_full_with_opf = 16;
  string name_short_with_opf = 17;
  double opf_code = 18;
  string opf_full = 19;
  string opf_short = 20;
  OpfKind opf_kind = 21;
  string ogrn_date = 22;
  double okato = 23;
  double oktmo = 24;
  double okpo = 25;
  double okogu = 26;
  double okfs = 27;
  string registration_date = 28;
  string liquidation_date = 29;
  string updated_at = 30;
}

message Branch {
  string name = 1;
  AreaItem area = 2;
  LocationItem location = 3;
  StatusKind status_kind = 4;
}

message GetBySlugResponse {
  Main main = 1;
  repeated Branch branches = 2;
}

message GetRequest {
  opts.SkipLimit opts = 1;
}

message MetroItem {
  string id = 1;
  string slug = 2;
  string name = 3;
  float distance = 4;
}

message ManagerItem {
  string id = 1;
  string slug = 2;
  string name = 3;
}

message AreaItem {
  string id = 1;
  string slug = 2;
  string name = 3;
}

message LocationItem {
  string id = 1;
  string slug = 2;
  string name = 3;
}

message OkvedItem {
  string id = 1;
  string slug = 2;
  string name = 3;
  OkvedKind kind = 4;
}

message OrgShort {
  string id = 1;
  string slug = 2;
  string name = 3;
  double inn = 4;
  double kpp = 5;
  double ogrn = 6;
  OrgKind kind = 7;
  ManagerItem manager = 8;
  AreaItem area = 9;
  LocationItem location = 10;
  OkvedItem okved = 11;
  StatusKind status_kind = 12;
}

message GetResponse {
  repeated OrgShort orgs = 1;
}

enum OrgKind {
  ORG_KIND_NONE = 0;
  // Юридическое лицо
  LEGAL = 1;
  // Индивидуальный предприниматель
  INDIVIDUAL = 2;
}

// Версия справочника ОКВЭД
enum OkvedKind {
  OKVED_KIND_NONE = 0;
  Y2001 = 1;
  Y2004 = 2;
}

// Версия справочника ОКОПФ
enum OpfKind {
  OPF_KIND_NONE = 0;
  Y1999 = 1;
  Y2012 = 2;
  Y2014 = 3;
}

// Статус организации
enum StatusKind {
  STATUS_KIND_NONE = 0;
  // Действующая
  ACTIVE = 1;
  // Ликвидируется
  LIQUIDATING = 2;
  // Ликвидирована
  LIQUIDATED = 3;
  // Банкротство
  BANKRUPT = 4;
  // В процессе присоединения к другому юрлицу, с последующей ликвидацией
  REORGANIZING = 5;
}
