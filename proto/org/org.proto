syntax = "proto3";

package org;
option go_package = "github.com/nnqq/scr-proto/codegen/go/org";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "opts/page.proto";

service Org {
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/v1/org/get"
    };
  };
}

message GetRequest {
  opts.SkipLimit opts = 1;
}

message OrgShort {
  string id = 1;
  string slug = 2;
  string name = 3;
  double inn = 4;
  double kpp = 5;
  double ogrn = 6;
  OrgKind org_kind = 7;
  string manager_id = 8;
  string manager_slug = 9;
  string manager_name = 10;
  string area_id = 11;
  string area_slug = 12;
  string area_name = 13;
  string location_id = 14;
  string location_slug = 15;
  string location_name = 16;
  string okved_id = 17;
  string okved_slug = 18;
  string okved_name = 19;
  StatusKind status_kind = 20;
}

message GetResponse {
  repeated OrgShort orgs = 1;
}

enum OrgKind {
  ORG_KIND_NONE = 0;
  // Юридическое лицо
  LEGAL = 1;
  // Индивидуальный предприниматель
  INDIVIDUAL = 2;
}

// Версия справочника ОКВЭД
enum OkvedKind {
  OKVED_KIND_NONE = 0;
  y2001 = 1;
  y2004 = 2;
}

// Версия справочника ОКОПФ
enum OpfKind {
  OPF_KIND_NONE = 0;
  y1999 = 1;
  y2012 = 2;
  y2014 = 3;
}

// Тип подразделения
enum BranchKind {
  BRANCH_KIND_NONE = 0;
  // Головная организация
  MAIN = 1;
  // Филиал
  BRANCH = 2;
}

// Статус организации
enum StatusKind {
  STATUS_KIND_NONE = 0;
  // Действующая
  ACTIVE = 1;
  // Ликвидируется
  LIQUIDATING = 2;
  // Ликвидирована
  LIQUIDATED = 3;
  // Банкротство
  BANKRUPT = 4;
  // В процессе присоединения к другому юрлицу, с последующей ликвидацией
  REORGANIZING = 5;
}
