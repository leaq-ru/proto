syntax = "proto3";

package billing;
option go_package = "github.com/nnqq/scr-proto/codegen/go/billing";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "opts/page.proto";

service Billing {
  rpc CreateInvoice(CreateInvoiceRequest) returns (CreateInvoiceResponse) {
    option (google.api.http) = {
      post: "/v1/billing/createInvoice"
      body: "*"
    };
  }
  rpc RobokassaWebhook(RobokassaWebhookRequest) returns (google.protobuf.StringValue) {
    option (google.api.http) = {
      get: "/v1/billing/robokassaWebhook/{secret}"
    };
  }
  rpc RenewCompanyPremium(RenewCompanyPremiumRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/billing/renewCompanyPremium"
      body: "*"
    };
  };
  rpc RenewDataPremium(RenewDataPremiumRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/billing/renewDataPremium"
      body: "*"
    };
  };
  rpc GetMyBalance(google.protobuf.Empty) returns (GetMyBalanceResponse) {
    option (google.api.http) = {
      get: "/v1/billing/getMyBalance"
    };
  };
  rpc GetMyInvoices(GetMyInvoicesRequest) returns (GetMyInvoicesResponse) {
    option (google.api.http) = {
      get: "/v1/billing/getMyInvoices"
    };
  };
  rpc GetMyDataPlan(google.protobuf.Empty) returns (GetMyDataPlanResponse) {
    option (google.api.http) = {
      get: "/v1/billing/getMyDataPlan"
    };
  };
  rpc ManualDebit(ManualDebitRequest) returns (google.protobuf.Empty) {};
  rpc GetDataPlan(GetDataPlanRequest) returns (GetDataPlanResponse) {};
}

message GetDataPlanRequest {
  string user_id = 1;
}

message GetDataPlanResponse {
  bool premium = 1;
  string premium_deadline = 2;
}

message GetMyDataPlanResponse {
  bool premium = 1;
  string premium_deadline = 2;
}

message GetMyInvoicesRequest {
  opts.SkipLimit opts = 1;
}

enum Status {
  STATUS_NONE = 0;
  PENDING = 1;
  SUCCESS = 2;
}

enum Kind {
  KIND_NONE = 0;
  DEBIT_ROBOKASSA = 1;
  CREDIT_COMPANY_PREMIUM = 2;
  DEBIT_MANUAL = 3;
  CREDIT_DATA_PREMIUM = 4;
}

message DebitRobokassa {
  uint64 invoice_id = 1;
}

message CreditCompanyPremium {
  string company_id = 1;
  uint32 month_amount = 2;
  string company_slug = 3;
}

message CreditDataPremium {
  uint32 month_amount = 1;
}

message InvoiceItem {
  string id = 1;
  string created_at = 2;
  uint32 amount = 3;
  Status status = 4;
  Kind kind = 5;
  DebitRobokassa debit_robokassa = 6;
  CreditCompanyPremium credit_company_premium = 7;
  CreditDataPremium credit_data_premium = 8;
}

message GetMyInvoicesResponse {
  repeated InvoiceItem invoices = 1;
}

message ManualDebitRequest {
  string user_id = 1;
  // russian penny
  uint32 amount = 2;
}

message RenewCompanyPremiumRequest {
  string company_id = 1;
  uint32 month_amount = 2;
}

message RenewDataPremiumRequest {
  uint32 month_amount = 1;
}

message GetBalanceRequest {
  string user_id = 1;
}

message GetMyBalanceResponse {
  uint32 balance = 1;
}

message RobokassaWebhookRequest {
  string secret = 1;
  string inv_id = 2 [json_name = "InvId"];
  // e.g. 101.66
  float out_sum = 3 [json_name = "OutSum"];
  string signature_value = 4 [json_name = "SignatureValue"];
}

message CreateInvoiceRequest {
  // russian penny
  uint32 amount = 1;
}

message CreateInvoiceResponse {
  string url = 1;
}
