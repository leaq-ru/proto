syntax = "proto3";

package parser;
option go_package = "github.com/nnqq/scr-proto/codegen/go/parser";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service City {
  rpc FindCity(FindCityRequest) returns (FindCityResponse);
  rpc GetCityById(GetCityByIdRequest) returns (CityItem) {
    option (google.api.http) = {
      get: "/v1/city/getById"
    };
  };
  rpc GetCityBySlug(GetCityBySlugRequest) returns (CityItem) {
    option (google.api.http) = {
      get: "/v1/city/getBySlug"
    };
  };
  rpc GetCityByIds(GetCityByIdsRequest) returns (CitiesResponse) {
    option (google.api.http) = {
      get: "/v1/city/getByIds"
    };
  };
  rpc GetAllCity(google.protobuf.Empty) returns (CitiesResponse) {
    option (google.api.http) = {
      get: "/v1/city/getAll"
    };
  };
  rpc GetCityHints(GetCityHintsRequest) returns (CitiesResponse) {
    option (google.api.http) = {
      get: "/v1/city/getHints"
    };
  };
}

message GetCityHintsRequest {
  string title = 1;
  uint32 limit = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    description: "20 default"
    minimum: 1
    maximum: 100
  }];
}

message GetCityBySlugRequest {
  string slug = 1;
}

message GetCityByIdRequest {
  string city_id = 1;
}

message GetCityByIdsRequest {
  repeated string city_ids = 1;
}

message CitiesResponse {
  repeated CityItem cities = 1;
}

message FindCityRequest {
  string html = 1;
}

message FindCityResponse {
  string city_id = 1;
  bool is_found = 2;
}

message CityItem {
  string id = 1;
  string title = 2;
  string slug = 3;
}
